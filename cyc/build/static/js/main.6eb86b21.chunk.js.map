{"version":3,"sources":["Assets/str.svg","Assets/dex.svg","Assets/con.svg","Assets/wis.svg","Assets/int.svg","Assets/cha.svg","Assets/about.svg","Assets/d20.svg","Data/Terms.js","Utilities.js","Data/Abilities.js","Components/ArrowBtn.js","Components/Abilities/Ability.js","Components/AbilityModsTable.js","Parts.js","Components/Abilities/Intro.js","Components/Abilities/AbilityComponent.js","Components/Rolls/Intro.js","Components/Rolls/Roll.js","Components/Rolls/RollComponent.js","Components/GMComponent.js","Components/LevelComponent.js","Components/AlignmentComponent.js","Components/InspirationComponent.js","Components/HitPointComponent.js","Components/RestComponent.js","Components/CombatComponent.js","Tree.js","Components/MainMenu.js","Components/MainComponent.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","terms","game","party","short","long","gm","ability","singular","plural","score","modifier","skill","alignment","law","chaos","neutral","good","evil","combat","name","init","surprise","item","hit","die","points","max","rest","inf","spell","traits","inspiration","level","up","person","crit","rolls","saving","death","attack","passive","group","objective","majority","contest","damage","dc","ac","bonus","advantage","disadvantage","titleCase","string","sentence","toLowerCase","split","i","length","toUpperCase","slice","join","abilities","code","url","icon","str","description_short","description_long","description_checks","checks","skills","dex","con","int","wis","cha","ArrowBtn","state","text","back","this","updateState","props","setState","to","className","Component","Ability","abilityID","abilityInfo","setAbility","info","id","correctHTML","data","map","key","indexOf","AbilityModsTable","abilityChecks","subtitle","abilityIntro","attackRolls","axis","description","hitDice","gainMaxHP","healing","Intro","modifierSection","modifiers","AbilityComponent","abilityIcon","about","exact","path","tooltip","alt","src","diceRolls","Roll","rollType","checkRender","savingRender","attackRender","contests","groupChecks","savingThrows","RollComponent","GMComponent","style","margin","textAlign","LevelComponent","AlignmentComponent","InspirationComponent","inspirationIntro","inspirationGain","inspirationUse","HitPointComponent","hitPoints","maxHitPoints","noHitPoints","knockedOut","stableDeath","RestComponent","restIntro","CombatComponent","combatIntro","initiative","actions","cover","GM","tree","comp","title","hidden","MainMenu","d20","MainComponent","App","forceRefresh","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,yOCChCC,G,MAAQ,CACfC,KAAO,qBACPC,MAAQ,CACJC,MAAQ,QACRC,KAAO,qBAEXC,GAAK,KACLC,QAAU,CACNC,SAAW,UACXC,OAAS,YACTC,MAAQ,CACJL,KAAO,CACHG,SAAU,gBACVC,OAAQ,kBAEZL,MAAQ,CACJI,SAAW,QACXC,OAAS,WAGjBE,SAAW,CACPN,KAAO,CACHG,SAAU,mBACVC,OAAQ,qBAEZL,MAAQ,CACJI,SAAW,WACXC,OAAS,eAIrBG,MAAQ,CACJJ,SAAW,QACXC,OAAS,UAEbI,UAAY,CACRL,SAAW,YACXC,OAAS,aACTK,IAAM,SACNC,MAAQ,UACRC,QAAU,UACVC,KAAO,OACPC,KAAO,QAEXC,OAAS,CACLC,KAAO,SACPC,KAAO,aACPC,SAAW,YAEfC,KAAO,CACLf,SAAW,OACXC,OAAS,SAEXe,IAAM,CACFC,IAAM,CACFjB,SAAU,UACVC,OAAQ,YAEZiB,OAAS,CACLlB,SAAW,YACXC,OAAS,aACTkB,IAAM,mBAGdC,KAAO,CACHxB,MAAQ,aACRC,KAAO,YACPe,KAAO,OACPS,IAAM,WAEVC,MAAQ,CACJtB,SAAW,QACXC,OAAS,UAEbsB,OAAS,CACLvB,SAAW,QACXC,OAAS,UAEbuB,YAAc,cACdC,MAAQ,CACJzB,SAAW,QACXC,OAAS,SACTyB,GAAK,CACDL,IAAM,CACFrB,SAAU,iBACVC,OAAQ,qBAEZ0B,OAAS,CACL3B,SAAU,gBACVC,OAAQ,uBAIpB2B,KAAO,CACH5B,SAAW,eACXC,OAAS,iBAEb4B,MAAQ,CACJ7B,SAAW,OACXC,OAAS,QACTF,QAAU,CACNF,KAAM,CACFG,SAAU,gBACVC,OAAQ,kBAEZL,MAAO,CACHI,SAAU,QACVC,OAAQ,WAGhB6B,OAAS,CACL9B,SAAU,eACVC,OAAQ,gBACR8B,MAAQ,CACJ/B,SAAW,qBACXC,OAAS,wBAGjB+B,OAAS,CACLhC,SAAW,cACXC,OAAS,gBAEbgC,QAAU,CACNjC,SAAW,gBACXC,OAAS,kBAEbiC,MAAQ,CACJlC,SAAW,cACXC,OAAS,eACTkC,UAAY,CACRnC,SAAW,wBACXC,OAAS,0BAEbmC,SAAW,CACPpC,SAAW,uBACXC,OAAS,0BAGjBoC,QAAU,CACNrC,SAAW,UACXC,OAAS,YAEbqC,OAAS,CACLtC,SAAW,cACXC,OAAS,iBAGjBsC,GAAK,CACD1C,KAAO,CACHG,SAAW,mBACXC,OAAS,qBAEbL,MAAQ,CACJI,SAAW,KACXC,OAAS,QAGjBuC,GAAK,CACD3C,KAAO,CACHG,SAAW,cACXC,OAAS,iBAEbL,MAAQ,CACJI,SAAW,KACXC,OAAS,QAGjBwC,MAAQ,CACJC,UAAY,CACR1C,SAAW,YACXC,OAAS,cAEb0C,aAAe,CACX3C,SAAW,eACXC,OAAS,mBC9Kd,SAAS2C,EAAUC,GAEtB,IADA,IAAIC,EAAWD,EAAOE,cAAcC,MAAM,KAClCC,EAAI,EAAGA,EAAGH,EAASI,OAAQD,IAC/BH,EAASG,GAAKH,EAASG,GAAG,GAAGE,cAAgBL,EAASG,GAAGG,MAAM,GAEnE,OAAON,EAASO,KAAK,K,gHCEdC,EAAY,CACnB,CACI1C,KAAO,SACP2C,KAAO,MACPC,IAAM,iBACNC,KAAOC,IACPC,kBAAoB,qBACpBC,iBAAmB,0HAEnBC,mBAAqB,MAAQpE,EAAMoC,MAAM9B,QAAQH,MAAMI,SAAW,2KAGlE8D,OAAS,CACL,mDACA,0BACA,mEACA,oEACA,sBACA,6BAEJC,OAAS,CACL,cAGR,CACInD,KAAO,WACP2C,KAAO,MACPC,IAAM,iBACNC,KAAOO,IACPL,kBAAoB,oBACpBC,iBAAmB,8DACnBC,mBAAqB,MAAQpE,EAAMoC,MAAM9B,QAAQH,MAAMI,SAAW,2IAElE8D,OAAS,CACL,mDACA,0BACA,mEACA,oEACA,sBACA,6BAEJC,OAAS,CACL,aACA,SACA,mBAGR,CACInD,KAAO,gBACP2C,KAAO,MACPC,IAAM,iBACNC,KAAOQ,IACPN,kBAAoB,uBACpBC,iBAAmB,oEACnBC,mBAAqB,OAASpE,EAAMoC,MAAM9B,QAAQH,MAAMI,SAAW,wQAInE8D,OAAS,CACL,6BACA,gDACA,iBACA,gCACA,2BAEJC,OAAS,CACL,KAGR,CACInD,KAAO,eACP2C,KAAO,MACPC,IAAM,iBACNC,KAAOS,IACPP,kBAAoB,qCACpBC,iBAAmB,sGAEnBC,mBAAqB,MAAQpE,EAAMoC,MAAM9B,QAAQH,MAAMI,SAAW,uIAElE8D,OAAS,CACL,kDACA,yCACA,gEACA,0BACA,sDACA,gCAEJC,OAAS,CACL,SACA,WACA,mBACA,aACA,gBAGR,CACInD,KAAO,eACP2C,KAAO,MACPC,IAAM,iBACNC,KAAOU,IACPR,kBAAoB,uCACpBC,iBAAmB,kIAEnBC,mBAAqB,MAAQpE,EAAMoC,MAAM9B,QAAQH,MAAMI,SAAW,+LAGlE8D,OAAS,CACL,gEACA,4EAEJC,OAAS,CACL,qBACA,gBACA,cACA,WACA,kBAGR,CACInD,KAAO,UACP2C,KAAO,MACPC,IAAM,iBACNC,KAAOW,IACPT,kBAAoB,kCACpBC,iBAAmB,2LAGnBC,mBAAqB,mBAAqBpE,EAAMoC,MAAM9B,QAAQH,MAAMI,SAAW,0MAG/E8D,OAAS,CACL,8EACA,8EAEJC,OAAS,CACL,YACA,kBACA,eACA,mBC/ICM,EAAb,2MAEIC,MAAQ,CACJC,KAAO,GACPf,IAAM,GACNgB,MAAO,GALf,oFASQC,KAAKC,gBATb,0CAaQD,KAAKC,gBAbb,oCAiBYD,KAAKE,MAAMJ,OAASE,KAAKH,MAAMC,MAAQE,KAAKE,MAAMnB,MAAQiB,KAAKH,MAAMd,KAAOiB,KAAKE,MAAMH,OAASC,KAAKH,MAAME,MAC3GC,KAAKG,SAAS,CACVL,KAAOE,KAAKE,MAAMJ,KAClBf,IAAMiB,KAAKE,MAAMnB,IACjBgB,KAAOC,KAAKE,MAAMH,SArBlC,+BA0Bc,IAAD,EACmBC,KAAKH,MAAxBC,EADA,EACAA,KAAMf,EADN,EACMA,IAAKgB,EADX,EACWA,KAChB,OACI,kBAAC,IAAD,CAAMK,GAAIrB,EAAKsB,UAAW,oBAAqBN,EAAsB,eAAhB,gBAChDA,EACG,yBAAKM,UAAW,mBAGhB,kBAAC,WAAD,MAEJ,yBAAKA,UAAW,kBACXP,GAEHC,EAIE,kBAAC,WAAD,MAHA,yBAAKM,UAAW,wBAxCpC,GAA8BC,aCGjBC,EAAb,2MAEIV,MAAQ,CACJW,WAAa,EACbC,YAAc,IAJtB,mFAQQT,KAAKU,WAAWV,KAAKE,MAAMS,QARnC,2CAYQX,KAAKU,WAAWV,KAAKE,MAAMS,QAZnC,iCAegBC,GACJA,IAAOZ,KAAKH,MAAMW,WAClBR,KAAKG,SAAS,CACVK,UAAYI,EACZH,YAAc5B,EAAU+B,OAnBxC,+BAwBc,IAAD,EAC0BZ,KAAKH,MAA/BW,EADA,EACAA,UAAWC,EADX,EACWA,YAEhB,OAAmB,IAAfD,EACO,yBAAKH,UAAW,WAAhB,iBAEAL,KAAKa,YAAYJ,EAAaD,KA9BjD,kCAkCgBM,EAAMF,GAEd,OACI,kBAAC,WAAD,KAEI,yBAAKP,UAAW,kBACZ,yBAAKA,UAAW,2BACXS,EAAK3E,MAGV,yBAAKkE,UAAW,QACXS,EAAKhC,OAId,yBAAKuB,UAAW,eACXS,EAAK3B,kBAGV,yBAAKkB,UAAW,sBACXlC,EAAUnD,EAAMW,MAAMH,SAG3B,4BAEIsF,EAAKxB,OAAOyB,KAAI,SAAAzE,GAAI,OAChB,wBAAI0E,IAAKF,EAAKxB,OAAO2B,QAAQ3E,GAAO+D,UAAW,aAC1C/D,OAMb,yBAAK+D,UAAW,sBACXlC,EACGnD,EAAMoC,MAAM9B,QAAQH,MAAMK,OACzB,OACDsF,EAAK3E,OAIb,yBAAKkE,UAAW,eACXS,EAAK1B,mBAEN,4BAEI0B,EAAKzB,OAAO0B,KAAI,SAAAzE,GAAU,OACtB,wBAAI0E,IAAKF,EAAKzB,OAAO4B,QAAQ3E,GAAO+D,UAAW,aACzC/D,QAOlB,kBAAC,EAAD,CAAUyC,IAAK,eAAgBgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMoC,MAAM9B,QAAQF,KAAKI,eAzFrG,GAA6B8E,aCJhBY,EAAb,iLAEQ,OACI,kBAAC,WAAD,KACI,2BAAOb,UAAW,eACd,+BACA,4BACI,qCACA,0CAGJ,+BACA,4BACI,iCACA,wCAEJ,4BACI,wCACA,wCAEJ,4BACI,wCACA,wCAEJ,4BACI,wCACA,wCAEJ,4BACI,wCACA,wCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,0CACA,mCAEJ,4BACI,kCACA,2CA1ExB,GAAsCC,aCyI/B,SAASa,IAAgC,IAAlBC,IAAiB,yDAC3C,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMoC,MAAM9B,QAAQH,MAAMK,SAGzC,yBAAK6E,UAAW,eAAhB,MACQrF,EAAMoC,MAAM9B,QAAQF,KAAKG,SADjC,+HAGgCP,EAAMK,GAHtC,YAGmDL,EAAMoC,MAAM9B,QAAQF,KAAKG,SAH5E,yLAOI,6BAAK,6BAPT,aAQeP,EAAMoC,MAAM9B,QAAQF,KAAKG,SARxC,QAQuDP,EAAMK,GAR7D,+BASiBL,EAAMM,QAAQE,OAT/B,+FAUsDR,EAAM8C,GAAG1C,KAAKG,SAVpE,IAWI,6BAAM,6BAXV,sDAYkDP,EAAM8C,GAAG3C,MAAMI,SAZjE,MAoBL,SAAS8F,IAA+B,IAAlBD,IAAiB,yDAC1C,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMM,QAAQE,SAG7B,yBAAK6E,UAAW,eAAhB,YACcrF,EAAMM,QAAQE,OAD5B,+GAGI,6BAAM,6BAHV,8GAKmDR,EAAMM,QAAQE,OALjE,IAMI,6BAAM,6BANV,qEAQUR,EAAMM,QAAQE,OARxB,8CAeL,SAAS8F,IAA8B,IAAlBF,IAAiB,yDACzC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMoC,MAAMG,OAAO/B,SAGlC,yBAAK6E,UAAW,eAAhB,MACQrF,EAAMoC,MAAMG,OAAOhC,SAD3B,0CAGI,6BAAM,6BAHV,iBAImBP,EAAMoC,MAAMG,OAAOhC,SAJtC,8BAKSP,EAAMM,QAAQI,SAASP,MAAMK,OALtC,eAMI,6BAAM,6BANV,mBAOqBR,EAAMoC,MAAMG,OAAOhC,SAPxC,2BAQQP,EAAM+C,GAAG3C,KAAKG,SARtB,qCA4FZ,SAASgG,EAAKpF,EAAMqF,GAChB,OACI,6BACI,yBAAKnB,UAAW,iBACXlE,GAEL,6BACKqF,IAMV,SAASxE,IAAwB,IAAlBoE,IAAiB,yDACnC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMgC,MAAMxB,SAG3B,yBAAK6E,UAAW,eAAhB,wLAGuCrF,EAAMgC,MAAMC,GAAGL,IAAIrB,SAH1D,IAII,6BAAM,6BAJV,uBAKyBP,EAAMgC,MAAMC,GAAGC,OAAO3B,SAL/C,+GAQI,6BAAM,6BARV,uBASyBP,EAAMgC,MAAMxB,OATrC,wBAUSR,EAAMM,QAAQG,MAAML,KAAKI,OAVlC,2BAWSR,EAAMM,QAAQG,MAAMN,MAAMK,OAXnC,kCAYyBR,EAAMM,QAAQG,MAAMN,MAAMI,SAZnD,+BAa0BP,EAAMM,QAAQG,MAAML,KAAKG,SAbnD,qBAcI,6BAAM,6BAdV,gBAekBP,EAAMgC,MAAMC,GAAGC,OAAO3B,SAfxC,aAe4DP,EAAMuB,IAAIC,IAAIjB,SAf1E,gBAqBL,SAASkG,IAA0B,IAAlBL,IAAiB,yDACrC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CpG,EAAMuB,IAAIC,IAAIhB,QAGnB,yBAAK6E,UAAW,eAAhB,0CACyCrF,EAAMuB,IAAIC,IAAIhB,OADvD,mBAC+ER,EAAM2B,KAAKxB,MAD1F,2BAEwBH,EAAMuB,IAAIC,IAAIhB,OAFtC,6CAGQR,EAAMuB,IAAIC,IAAIhB,OAHtB,gCAG2DR,EAAMgC,MAAMzB,SAHvE,kBAII,6BAAM,6BAJV,YAKcP,EAAMuB,IAAIC,IAAIjB,SAL5B,+CAMwBP,EAAMuB,IAAIC,IAAIjB,SANtC,mBAOQP,EAAMM,QAAQI,SAASP,MAAMI,SAPrC,OAOmDsD,EAAU,GAAG1C,KAPhE,yCAQ2BnB,EAAMuB,IAAIE,OAAOjB,OAR5C,mBASI,6BAAM,6BATV,iCAUmCR,EAAMuB,IAAIC,IAAIhB,OAVjD,4BAWQR,EAAM2B,KAAKvB,KAXnB,IAYI,6BAAM,6BAZV,gBAakBJ,EAAMgC,MAAMC,GAAGC,OAAO3B,SAbxC,oCAcoCP,EAAMuB,IAAIC,IAAIjB,SAdlD,YAuCZ,SAASmG,IAA4B,IAAlBN,IAAiB,yDAChC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAAnD,gBACkBpG,EAAMuB,IAAIE,OAAOC,KAGnC,yBAAK2D,UAAW,eAAhB,MACQrF,EAAMgC,MAAMC,GAAGL,IAAIrB,SAD3B,aAC+CP,EAAMuB,IAAIC,IAAIjB,SAD7D,gBAEgBP,EAAMM,QAAQI,SAASP,MAAMI,SAF7C,OAE2DsD,EAAU,GAAG1C,KAFxE,OAEkFnB,EAAMoC,MAAM7B,SAF9F,6BAG4BP,EAAMuB,IAAIE,OAAOC,IAH7C,IAII,6BAAM,6BAJV,qBAKuB1B,EAAMM,QAAQI,SAASP,MAAMI,SALpD,OAKkEsD,EAAU,GAAG1C,KAL/E,sBAMSnB,EAAMuB,IAAIE,OAAOC,IAN1B,oDAoCL,SAASiF,IAA0B,IAAlBP,IAAiB,yDACrC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAAnD,SAIA,yBAAKf,UAAW,eAAhB,8DAEI,6BAFJ,iEAII,6BAJJ,MAKQrF,EAAM2B,KAAKR,KALnB,wBAK8CnB,EAAMuB,IAAIE,OAAOjB,OAL/D,uBAMOR,EAAM6B,MAAMrB,OANnB,MAM8BR,EAAMsB,KAAKd,OANzC,8CAOI,6BAAM,6BAPV,iEASSR,EAAMuB,IAAIE,OAAOjB,OAT1B,iCASgER,EAAMuB,IAAIE,OAAOjB,OATjF,kBAUSR,EAAMuB,IAAIE,OAAOjB,OAV1B,0CAUyER,EAAMuB,IAAIE,OAAOC,IAV1F,+BAW+B1B,EAAMuB,IAAIE,OAAOjB,OAXhD,6CAaI,6BAAM,6BAbV,iDAcmDR,EAAMuB,IAAIE,OAAOjB,OAdpE,mDCjaL,IAAMoG,EAAb,iLAGQ,OACI,kBAAC,WAAD,KACKP,GAAa,GACbrB,KAAK6B,kBACLV,IACD,kBAAC,EAAD,CAAUpC,IAAK,eAAgBgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMoC,MAAM9B,QAAQF,KAAKI,UACpFwB,IACD,kBAAC,EAAD,CAAU+B,IAAK,SAAUgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMgC,MAAMxB,aAVlF,wCAgBQ,OACI,kBAAC,WAAD,KAEI,yBAAK6E,UAAW,gBACZ,6BACKL,KAAK8B,YACL9B,KAAKV,UAGV,kBAAC,EAAD,UAzBpB,kCAkCQ,OACI,kBAAC,WAAD,KAEI,yBAAKe,UAAW,sBACXlC,EAAUnD,EAAMM,QAAQI,SAASP,MAAMK,SAG5C,yBAAK6E,UAAW,eAAhB,mBACqBrF,EAAMM,QAAQE,OADnC,0EAEmCR,EAAMM,QAAQC,SAFjD,QAEgEP,EAAMM,QAAQG,MAAML,KAAKG,SAFzF,IAGI,6BAHJ,IAGW,6BAHX,MAIQP,EAAMM,QAAQG,MAAML,KAAKG,SAJjC,iCAIyEP,EAAMM,QAAQE,OAJvF,8HAMyCR,EAAMM,QAAQC,SANvD,IAOI,6BAPJ,IAOW,6BAPX,QAQUP,EAAMM,QAAQC,SARxB,wBAQoDP,EAAMM,QAAQI,SAASP,MAAMI,SARjF,oBASQP,EAAMM,QAAQG,MAAMN,MAAMI,SATlC,oCAUI,6BAVJ,IAUW,6BAVX,sBAWwBP,EAAMM,QAAQI,SAASN,KAAKG,SAXpD,yCAYYP,EAAMM,QAAQG,MAAML,KAAKG,SAZrC,kDAaI,6BAbJ,IAaW,6BAbX,oBAcsBP,EAAMM,QAAQI,SAASN,KAAKI,OAdlD,yDAe4BR,EAAMM,QAAQI,SAASN,KAAKI,OAfxD,iDAgBwBR,EAAMM,QAAQG,MAAMN,MAAMI,SAhBlD,cAiBI,6BAjBJ,IAiBW,iCA1D3B,+BAkEQ,OACI,kBAAC,WAAD,KAEI,yBAAK8E,UAAW,sBACXlC,EAAUnD,EAAMW,MAAMH,SAG3B,yBAAK6E,UAAW,eAAhB,QACUrF,EAAMM,QAAQC,SADxB,wDAEmBP,EAAMW,MAAMH,OAF/B,sEAG6CR,EAAMW,MAAMJ,SAHzD,8CAIiCP,EAAMM,QAAQG,MAAML,KAAKG,SAJ1D,2CAMSP,EAAMW,MAAMH,OANrB,8CAzEhB,GAA2B8E,a,iBCAdyB,EAAb,iLAEc,IAAD,OACL,OACI,yBAAK1B,UAAW,QACZ,yBAAKA,UAAW,gBAEXL,KAAKgC,YAAYC,IAAO,iBAAe,cACvCpD,EAAUkC,KAAI,SAAAzE,GAAI,OACf,kBAAC,WAAD,CAAU0E,IAAKnC,EAAUoC,QAAQ3E,IAC5B,EAAK0F,YAAY1F,EAAK0C,KAAM1C,EAAKH,KAAMG,EAAKyC,UAMzD,yBAAKsB,UAAW,aACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,cACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBACd,kBAAC,EAAD,CAASxB,KAAM,KAEnB,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,kBACd,kBAAC,EAAD,CAASxB,KAAM,KAEnB,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,kBACd,kBAAC,EAAD,CAASxB,KAAM,KAEnB,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,kBACd,kBAAC,EAAD,CAASxB,KAAM,KAEnB,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,kBACd,kBAAC,EAAD,CAASxB,KAAM,KAEnB,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,kBACd,kBAAC,EAAD,CAASxB,KAAM,UArC3C,kCA8CgB3B,EAAMoD,EAASrD,GACvB,OACI,kBAAC,IAAD,CAASmD,OAAK,EAAC9B,GAAIrB,EAAKsB,UAAW,gBAC/B,0BAAMA,UAAU,WAAW+B,GAC3B,yBAAKC,IAAK,GAAIC,IAAKtD,SAlDnC,GAAsCsB,aCDzBsB,EAAb,iLAEQ,OACI,kBAAC,WAAD,KHJL,WAAqC,IAAlBR,IAAiB,yDACvC,OACI,kBAAC,WAAD,KAEI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMoC,MAAM5B,SAG3B,yBAAK6E,UAAW,eAAhB,uBACyBrF,EAAMoC,MAAM5B,OADrC,gBAEI,4BACI,gCAAM2C,EAAUnD,EAAMoC,MAAM9B,QAAQF,KAAKI,QAAzC,KACA,gCAAM2C,EAAUnD,EAAMoC,MAAMC,OAAO7B,QAAnC,KACA,gCAAM2C,EAAUnD,EAAMoC,MAAMG,OAAO/B,QAAnC,MALR,8BAOgCR,EAAMM,QAAQE,OAP9C,IAQI,6BAAM,6BARV,YAScR,EAAMoC,MAAM5B,OAT1B,oCAUI,4BACI,8CACA,2CAAiBR,EAAMM,QAAQI,SAASN,KAAKG,SAA7C,gCAAoFP,EAAMM,QAAQE,OAAlG,KACA,gFGfH+G,EAAU,GAIX,kBAAC,EAAD,CAAUxC,MAAM,EAAOhB,IAAK,eAAgBe,KAAM3B,EAAUnD,EAAMoC,MAAM9B,QAAQF,KAAKG,YACrF,kBAAC,EAAD,CAAUwE,MAAM,EAAOhB,IAAK,gBAAiBe,KAAM3B,EAAUnD,EAAMoC,MAAMC,OAAO9B,YAChF,kBAAC,EAAD,CAAUwE,MAAM,EAAOhB,IAAK,gBAAiBe,KAAM3B,EAAUnD,EAAMoC,MAAMG,OAAOhC,YAE/EyE,KAAK/B,eAbtB,kCAmBQ,OACI,kBAAC,WAAD,KACI,yBAAKoC,UAAW,sBACXlC,EAAUnD,EAAMgD,MAAMC,UAAU1C,UAAY,MAAO4C,EAAUnD,EAAMgD,MAAME,aAAa3C,WAG3F,yBAAK8E,UAAW,eAAhB,YACcrF,EAAMgD,MAAMC,UAAU1C,SADpC,MACiDP,EAAMgD,MAAME,aAAa1C,OAD1E,yCAEgCR,EAAMoC,MAAM7B,SAF5C,UAGUP,EAAMgD,MAAMC,UAAU1C,SAHhC,gCAIaP,EAAMoC,MAAM5B,OAJzB,YAI0CR,EAAMgD,MAAME,aAAa1C,OAJnE,cAKQR,EAAMoC,MAAM7B,SALpB,gBAMI,6BAAM,6BANV,oCAOsCP,EAAMoC,MAAM7B,SAPlD,yBAQYP,EAAMgD,MAAMC,UAAU1C,SARlC,gBAQyDP,EAAMgD,MAAME,aAAa3C,SARlF,2CAUI,6BAAM,6BAVV,sCAYQP,EAAMoC,MAAM7B,SAZpB,UAYqCP,EAAMgD,MAAMC,UAAU1C,SAZ3D,MAYwEP,EAAMgD,MAAME,aAAa1C,OAZjG,gDAcI,6BAAM,6BAdV,MAeQR,EAAMgD,MAAMC,UAAU1C,SAf9B,MAe2CP,EAAMgD,MAAME,aAAa1C,OAfpE,mBAgBSR,EAAM6B,MAAMrB,OAhBrB,MAgBgCR,EAAM8B,OAAOtB,OAhB7C,QAgB0DR,EAAM+B,YAAYxB,SAhB5E,0CAkBI,6BAAM,6BAlBV,MAmBQP,EAAMK,GAnBd,mEAoBQL,EAAMoC,MAAM7B,SApBpB,0DAqBaP,EAAMgD,MAAMC,UAAU1C,SArBnC,MAqBgDP,EAAMgD,MAAME,aAAa1C,OArBzE,UAzBhB,GAA2B8E,aCAdkC,EAAb,2MAEI3C,MAAQ,CACJ4C,SAAW,IAHnB,oFAOQzC,KAAKC,gBAPb,0CAWQD,KAAKC,gBAXb,oCAeYD,KAAKE,MAAMS,OAASX,KAAKH,MAAM4C,UAC/BzC,KAAKG,SAAS,CACVsC,SAAWzC,KAAKE,MAAMS,SAjBtC,+BAsBc,IACD8B,EAAYzC,KAAKH,MAAjB4C,SAEL,OACI,kBAAC,WAAD,KAEqB,UAAbA,EACIzC,KAAK0C,cACQ,WAAbD,EACIzC,KAAK2C,eACL3C,KAAK4C,eAEjB,kBAAC,EAAD,CAAU7D,IAAK,SAAUgB,MAAM,EAAMD,KAAM3B,EAAUnD,EAAMoC,MAAM5B,aAlCjF,oCAwCQ,OACI,kBAAC,WAAD,KACK2F,GAAc,GACf,kBAAC,EAAD,CAAUpC,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMM,QAAQE,UJyDjF,WAAoC,IAAlB4F,IAAiB,yDACtC,OACI,kBAAC,WAAD,KAEI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMoC,MAAMQ,QAAQpC,SAGnC,yBAAK6E,UAAW,eAAhB,OACSrF,EAAMoC,MAAMQ,QAAQrC,SAD7B,yQAMI,6BAAM,6BANV,8BAOgCP,EAAMoC,MAAMQ,QAAQrC,SAPpD,aAQQP,EAAMoC,MAAM9B,QAAQF,KAAKG,SARjC,+CAS0CP,EAAM8C,GAAG3C,MAAMI,SATzD,qCAUgBP,EAAMoC,MAAM9B,QAAQH,MAAMI,SAV1C,IAWI,6BAAM,6BAXV,0BAY4BP,EAAMoC,MAAM9B,QAAQH,MAAMI,SAZtD,uCAeWP,EAAMoC,MAAMQ,QAAQrC,SAf/B,gFAgB8BP,EAAMoC,MAAMQ,QAAQrC,SAhBlD,qDAkBQP,EAAMoC,MAAMQ,QAAQrC,SAlB5B,kBIhEKsH,GJmBV,WAAuC,IAAlBzB,IAAiB,yDACzC,OACI,kBAAC,WAAD,KAEI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMoC,MAAMK,MAAMjC,SAGjC,yBAAK6E,UAAW,eAAhB,aACerF,EAAME,MAAMC,MAD3B,wCAEQH,EAAMK,GAFd,uBAEsCL,EAAMoC,MAAMK,MAAMlC,SAFxD,IAII,yBAAK8E,UAAW,iBACXlC,EAAUnD,EAAMoC,MAAMK,MAAME,SAASnC,SAL9C,SAQWR,EAAMoC,MAAMK,MAAME,SAASpC,SARtC,8BASQP,EAAME,MAAMC,MATpB,aASqCH,EAAMoC,MAAM9B,QAAQF,KAAKG,SAT9D,IAUI,6BAAM,6BAVV,8BAWgCP,EAAME,MAAMC,MAX5C,uBAYQH,EAAME,MAAMC,MAZpB,wCAY6DH,EAAME,MAAMC,MAZzE,UAcI,yBAAKkF,UAAW,iBACXlC,EAAUnD,EAAMoC,MAAMK,MAAMC,UAAUlC,SAf/C,SAkBWR,EAAMoC,MAAMK,MAAMC,UAAUnC,SAlBvC,8BAmBQP,EAAME,MAAMC,MAnBpB,aAmBqCH,EAAMoC,MAAM9B,QAAQF,KAAKG,SAnB9D,IAoBI,6BAAM,6BApBV,qBAqBuBP,EAAMoC,MAAM9B,QAAQF,KAAKI,OArBhD,UAsBQR,EAAME,MAAMC,MAtBpB,8BAsBsDH,EAAME,MAAMC,MAtBlE,wCAuBgCH,EAAME,MAAMC,MAvB5C,YI1BK2H,GJjBV,WAAmC,IAAlB1B,IAAiB,yDACrC,OACI,kBAAC,WAAD,KAEI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMoC,MAAMI,QAAQhC,SAGnC,yBAAK6E,UAAW,eAAhB,MACQrF,EAAMoC,MAAMI,QAAQjC,SAD5B,2BAEQP,EAAMoC,MAAM9B,QAAQF,KAAKG,SAFjC,qBAGeP,EAAMoC,MAAM5B,OAH3B,IAII,6BAAM,6BAJV,OAKSR,EAAMoC,MAAM9B,QAAQH,MAAMI,SALnC,wJAQeP,EAAMK,GARrB,6HAUI,6BAAM,6BAVV,0EAYQL,EAAMoC,MAAMI,QAAQjC,SAZ5B,IAaI,6BAbJ,kBAcoBP,EAAMM,QAAQI,SAASP,MAAMK,OAdjD,kCAeQR,EAAMoC,MAAM9B,QAAQH,MAAMI,SAflC,IAgBI,6BAAM,6BAhBV,yBAiB2BP,EAAMgD,MAAMC,UAAU1C,SAjBjD,UAiBkEP,EAAMoC,MAAM9B,QAAQH,MAAMI,SAjB5F,YAkBW,6BAlBX,QAmBUP,EAAMgD,MAAME,aAAa3C,SAnBnC,aAmBsD,+BITjDiC,MA9CjB,qCAoDQ,OACI,kBAAC,WAAD,KACK8D,GAAY,GACb,kBAAC,EAAD,CAAUvC,IAAK,UAAWgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMkB,OAAOC,WAvDpF,qCA6DQ,OACI,kBAAC,WAAD,KJ6IL,WAAwC,IAAlBiF,IAAiB,yDAC1C,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMoC,MAAMC,OAAO7B,SAGlC,yBAAK6E,UAAW,eAAhB,MACQrF,EAAMoC,MAAMC,OAAO9B,SAD3B,4FAGcP,EAAMoC,MAAMC,OAAO9B,SAHjC,0CAII,6BAAM,6BAJV,iBAKmBP,EAAMoC,MAAMC,OAAO9B,SALtC,6BAMeP,EAAMM,QAAQI,SAASN,KAAKG,SAN3C,cAOI,6BAAM,6BAPV,MAQQP,EAAM8C,GAAG1C,KAAKG,SARtB,YAQyCP,EAAMoC,MAAMC,OAAO9B,SAR5D,kDAUI,6BAAM,6BAVV,sBAWwBP,EAAMoC,MAAMC,OAAO9B,SAX3C,wKInJKwH,EAAa,QA/D9B,GAA0BzC,aCDb0C,EAAb,iLAEQ,OACI,yBAAK3C,UAAW,QACZ,yBAAKA,UAAW,aACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,UACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBACd,kBAAC,EAAD,CAAMxB,KAAM,YAEhB,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,gBACd,kBAAC,EAAD,CAAMxB,KAAM,WAEhB,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,iBACd,kBAAC,EAAD,CAAMxB,KAAM,mBAhBxC,GAAmCL,aCHtB2C,EAAb,iLAEQ,OACI,yBAAK5C,UAAW,QACZ,yBAAK6C,MAAO,CAACC,OAAQ,OAAOC,UAAY,UAAW/C,UAAW,2BAA9D,qCAJhB,GAAiCC,aCIpB+C,EAAb,iLAGQ,OACI,yBAAKhD,UAAW,QACZ,yBAAKA,UAAW,aACXrD,GAAM,GACNqE,IACD,kBAAC,EAAD,CAAUtC,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMM,QAAQE,UACvEiG,IACD,kBAAC,EAAD,CAAU1C,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMuB,IAAIE,OAAOjB,gBAV/F,GAAoC8E,aCHvBgD,EAAb,iLAGQ,OACI,yBAAKjD,UAAW,QACZ,yBAAKA,UAAW,aRoOzB,WAAqC,IAAlBe,IAAiB,yDACvC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CjD,EAAUnD,EAAMY,UAAUJ,SAG/B,yBAAK6E,UAAW,eAAhB,yDACwDrF,EAAMY,UAAUL,SADxE,iEAGI,6BAAM,6BAHV,MAIQP,EAAMY,UAAUL,SAJxB,wEAKMP,EAAMY,UAAUI,KAAK,KAAKhB,EAAMY,UAAUG,QAAQ,KAAKf,EAAMY,UAAUK,KAL7E,qEAOMjB,EAAMY,UAAUC,IAAI,KAAKb,EAAMY,UAAUG,QAAQ,KAAKf,EAAMY,UAAUE,MAP5E,KAQI,6BAAM,6BARV,gKAWyBd,EAAMY,UAAUL,SAXzC,IAaKgG,EAAKvG,EAAMY,UAAUC,IAAI,IAAIb,EAAMY,UAAUI,KAAK,QAC/C,iDAEHuF,EAAKvG,EAAMY,UAAUG,QAAQ,IAAIf,EAAMY,UAAUI,KAAK,QACnD,2EAEHuF,EAAKvG,EAAMY,UAAUE,MAAM,IAAId,EAAMY,UAAUI,KAAK,QACjD,+FAEHuF,EAAKvG,EAAMY,UAAUC,IAAI,IAAIb,EAAMY,UAAUG,QAAQ,QAClD,iFAEHwF,EAAKvG,EAAMY,UAAUG,QAAQ,OAC1B,4HAEHwF,EAAKvG,EAAMY,UAAUE,MAAM,IAAId,EAAMY,UAAUG,QAAQ,QACpD,8EAEHwF,EAAKvG,EAAMY,UAAUC,IAAI,IAAIb,EAAMY,UAAUK,KAAK,QAC/C,qHAEHsF,EAAKvG,EAAMY,UAAUG,QAAQ,IAAIf,EAAMY,UAAUK,KAAK,QACnD,qDAEHsF,EAAKvG,EAAMY,UAAUE,MAAM,IAAId,EAAMY,UAAUK,KAAK,QACjD,4EQhRCL,EAAU,SAN/B,GAAwC0E,aCE3BiD,EAAb,iLAGQ,OACI,yBAAKlD,UAAW,QACZ,yBAAKA,UAAW,aACXL,KAAKwD,mBACLxD,KAAKyD,kBACLzD,KAAK0D,iBACN,kBAAC,EAAD,CAAU3E,IAAK,SAAUgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMoC,MAAM5B,cATtF,yCAgBQ,OACI,kBAAC,WAAD,KACI,yBAAK6E,UAAW,sBACXrF,EAAM+B,aAGX,yBAAKsD,UAAW,eACXrF,EAAM+B,YADX,wBAC6C/B,EAAMK,GADnD,+JAtBhB,wCAgCQ,OACI,kBAAC,WAAD,KACI,yBAAKgF,UAAW,sBAAhB,SACWrF,EAAM+B,aAGjB,yBAAKsD,UAAW,eAAhB,MACQrF,EAAMK,GADd,qBACoCL,EAAM+B,YAD1C,qDAEyB/B,EAAMK,GAF/B,sMAKI,6BAAM,6BALV,MAMQL,EAAM+B,YANd,sEAtChB,uCAmDQ,OACI,kBAAC,WAAD,KACI,yBAAKsD,UAAW,sBAAhB,QACUrF,EAAM+B,aAGhB,yBAAKsD,UAAW,eAAhB,YACcrF,EAAM+B,YADpB,mCACiE/B,EAAMoC,MAAM7B,SAD7E,YAEYP,EAAM+B,YAFlB,OAEmC/B,EAAMgD,MAAMC,UAAU1C,SAFzD,IAGI,6BAAM,6BAHV,gCAIkCP,EAAM+B,YAJxC,iHAMqB/B,EAAMK,GAN3B,qBAzDhB,GAA0CiF,aCC7BqD,EAAb,iLAEQ,OACI,yBAAKtD,UAAW,QACZ,yBAAKA,UAAW,aV+XzB,WAAqC,IAAlBe,IAAiB,yDACvC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CpG,EAAMuB,IAAIE,OAAOjB,QAGtB,yBAAK6E,UAAW,eAAhB,OACSrF,EAAMuB,IAAIE,OAAOjB,OAD1B,2OAII,6BAAM,6BAJV,OAKSR,EAAMuB,IAAIE,OAAOjB,OAL1B,oDAKmFR,EAAMuB,IAAIE,OAAOjB,OALpG,6CAM0CR,EAAMuB,IAAIE,OAAOC,IAN3D,4FAQI,6BAAM,6BARV,yEASqE1B,EAAMuB,IAAIE,OAAOjB,OATtF,sBAUgBR,EAAMuB,IAAIE,OAAOjB,OAVjC,uFAW+BR,EAAMuB,IAAIE,OAAOjB,OAXhD,MUrYSoI,EAAU,GACVjC,IACD,kBAAC,EAAD,CAAU5C,IAAK,QAASgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAM2B,KAAKC,OAChE,kBAAC,EAAD,CAAUmC,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMuB,IAAIE,OAAOjB,UVqVxF,WAAwC,IAAlB4F,IAAiB,yDAC1C,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAC9CpG,EAAMuB,IAAIE,OAAOC,KAGtB,yBAAK2D,UAAW,eAAhB,qIAGYrF,EAAMuB,IAAIE,OAAOC,IAH7B,IAII,6BAAM,6BAJV,OAKS1B,EAAMuB,IAAIE,OAAOjB,OAL1B,+BAK8DR,EAAMuB,IAAIE,OAAOC,IAL/E,KAOCgF,KUlWQmC,GACD,kBAAC,EAAD,CAAU9E,IAAK,SAAUgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMgC,MAAMzB,YAClE,kBAAC,EAAD,CAAUwD,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMM,QAAQE,UACvEiG,IV2ad,WAAuC,IAAlBL,IAAiB,yDACzC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAAnD,YACcpG,EAAMuB,IAAIE,OAAOjB,QAG/B,yBAAK6E,UAAW,eAAhB,kBACoBrF,EAAMuB,IAAIE,OAAOjB,OADrC,+CUjbSsI,GVycd,WAAiC,IAAlB1C,IAAiB,yDACnC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAAnD,kBAIA,yBAAKf,UAAW,eAAhB,8EAEkCrF,EAAMuB,IAAIE,OAAOjB,OAFnD,oFAGwDR,EAAMuB,IAAIE,OAAOC,IAHzE,MU/cSY,GVwbd,WAAsC,IAAlB8D,IAAiB,yDACxC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAAnD,2BAIA,yBAAKf,UAAW,eAAhB,+BAC8BrF,EAAMuB,IAAIE,OAAOjB,OAD/C,qFAGmCR,EAAMuB,IAAIE,OAAOlB,SAHpD,MU9bSwI,GVudd,WAAuC,IAAlB3C,IAAiB,yDACzC,OACI,kBAAC,WAAD,KACI,yBAAKf,WAAYe,EAAU,UAAY,WAAY,eAAnD,qBAIA,yBAAKf,UAAW,eAAhB,uCACyCrF,EAAMuB,IAAIE,OAAOjB,OAD1D,mBAEQR,EAAMoC,MAAMC,OAAO9B,SAF3B,sBAEwDP,EAAMoC,MAAMC,OAAOC,MAAM/B,SAFjF,4EAII,6BAAM,6BAJV,yBAK2BP,EAAMoC,MAAMC,OAAO7B,OAL9C,2CAMYR,EAAMM,QAAQG,MAAML,KAAKG,SANrC,IAQI,4BACI,sCAAYP,EAAMoC,MAAMC,OAAOC,MAAM/B,SAArC,gEAEA,sEAEA,2DAAiCP,EAAMuB,IAAIE,OAAOlB,SAAlD,KAEA,4FAEA,oDAAuBP,EAAMmC,KAAK5B,SAAlC,uBAEA,wEAA2CP,EAAMuB,IAAIE,OAAOC,IAA5D,aAnBR,4CAuB0C,6BAvB1C,+BAwBgC,6BAC5B,6BAzBJ,8JA4BI,6BAAM,+BUzfDsH,GACD,kBAAC,EAAD,CAAUjF,IAAK,gBAAiBgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMoC,MAAMC,OAAO7B,gBAjBpG,GAAuC8E,aCA1B2D,EAAb,iLAEQ,OACI,yBAAK5D,UAAW,QACZ,yBAAKA,UAAW,aACXL,KAAKkE,YACLlE,KAAK7E,QACL6E,KAAK5E,OACLqG,IACD,kBAAC,EAAD,CAAU1C,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMuB,IAAIE,OAAOjB,cAT/F,kCAgBQ,OACI,kBAAC,WAAD,KACI,yBAAK6E,UAAW,sBACXlC,EAAUnD,EAAM2B,KAAKC,MAG1B,yBAAKyD,UAAW,eAAhB,kcAtBhB,8BAqCQ,OACI,kBAAC,WAAD,KACI,yBAAKA,UAAW,sBACXlC,EAAUnD,EAAM2B,KAAKxB,QAG1B,yBAAKkF,UAAW,eAAhB,MACQrF,EAAM2B,KAAKxB,MADnB,mLA3ChB,6BAqDQ,OACI,kBAAC,WAAD,KACI,yBAAKkF,UAAW,sBACXlC,EAAUnD,EAAM2B,KAAKvB,OAG1B,yBAAKiF,UAAW,eAAhB,MACQrF,EAAM2B,KAAKvB,KADnB,wKAII,6BAAM,6BAJV,mPASI,6BAAM,6BATV,kBAUoBJ,EAAM2B,KAAKvB,KAV/B,qCAUuEJ,EAAMuB,IAAIE,OAAOjB,OAVxF,yDAW6CR,EAAMuB,IAAIC,IAAIhB,OAX3D,kFAaI,6BAAM,6BAbV,sDAcqDR,EAAM2B,KAAKvB,KAdhE,uEAeoDJ,EAAMuB,IAAIE,OAAOlB,SAfrE,oBAgBSP,EAAM2B,KAAKR,KAhBpB,sCA3DhB,GAAmCmE,aCEtB6D,EAAb,iLAEQ,OACI,yBAAK9D,UAAW,QACZ,yBAAKA,UAAW,aAEXL,KAAKoE,cACLpE,KAAK3D,WACL2D,KAAKqE,aACN,kBAAC,EAAD,CAAUtE,MAAM,EAAOhB,IAAK,eAAgBe,KAAM3B,EAAUnD,EAAMoC,MAAM9B,QAAQF,KAAKG,YACrF,kBAAC,EAAD,CAAUwD,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMM,QAAQE,UACvEwE,KAAKsE,UACLhD,IACD,kBAAC,EAAD,CAAUvC,IAAK,gBAAiBgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMoC,MAAMG,OAAO/B,UAC/EwE,KAAKnC,SACN,kBAAC,EAAD,CAAUkB,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMM,QAAQE,UACvEmG,IACD,kBAAC,EAAD,CAAU5C,IAAK,QAASgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAM2B,KAAKC,OAChE,kBAAC,EAAD,CAAUmC,IAAK,aAAcgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMuB,IAAIE,OAAOjB,UAC1EwE,KAAK7C,OACN,kBAAC,EAAD,CAAU4B,IAAK,gBAAiBgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMoC,MAAMG,OAAO/B,UAC/EwE,KAAKuE,QACN,kBAAC,EAAD,CAAUxF,IAAK,gBAAiBgB,MAAM,EAAOD,KAAM3B,EAAUnD,EAAMoC,MAAMC,OAAO7B,cAtBpG,oCA6BQ,OACI,kBAAC,WAAD,KACI,yBAAK6E,UAAW,sBACXlC,EAAUnD,EAAMkB,OAAOC,OAG5B,yBAAKkE,UAAW,eAAhB,yIAGI,6BAAM,6BAHV,sKAMqDrF,EAAMkB,OAAOE,KANlE,wIAnChB,iCAkDQ,OACI,kBAAC,WAAD,KACI,yBAAKiE,UAAW,sBACXlC,EAAUnD,EAAMkB,OAAOG,WAG5B,yBAAKgE,UAAW,eAAhB,kKAGI,6BAAM,6BAHV,oMAxDhB,mCAoEQ,OACI,kBAAC,WAAD,KACI,yBAAKA,UAAW,sBACXlC,EAAUnD,EAAMkB,OAAOE,OAG5B,yBAAKiE,UAAW,eAAhB,MACQrF,EAAMkB,OAAOE,KADrB,8GAGkCpB,EAAMoC,MAAM9B,QAAQH,MAAMI,SAH5D,OAG0EsD,EAAU,GAAG1C,KAHvF,QAIQnB,EAAMwJ,GAJd,wFAKoBxJ,EAAMkB,OAAOE,KALjC,uFAQI,yBAAKiE,UAAW,sBAAhB,uBARJ,8DAWgErF,EAAMK,GAXtE,QAYQL,EAAMK,GAZd,oBAaI,6BAbJ,8EAeI,6BAfJ,MAgBQL,EAAMK,GAhBd,6FAiBuBL,EAAMK,GAjB7B,wCAiBsEL,EAAMoC,MAAM7B,SAjBlF,QA1EhB,gCAkGQ,OACI,kBAAC,WAAD,KACI,yBAAK8E,UAAW,sBAAhB,uBAIA,yBAAKA,UAAW,eAAhB,iMAII,6BAAM,6BAJV,iDAMQrF,EAAMK,GANd,yDAMkEL,EAAMoC,MAAM7B,SAN9E,yEASI,yBAAK8E,UAAW,sBAAhB,UATJ,gEAeI,yBAAKA,UAAW,sBAAhB,WACarF,EAAM6B,MAAMtB,UAhB7B,qBAkBuBP,EAAM6B,MAAMrB,OAlBnC,oBAkB4DR,EAAM6B,MAAMrB,OAlBxE,gDAsBI,yBAAK6E,UAAW,sBAAhB,YAtBJ,0DA0BI,6BA1BJ,uDA2BsDrF,EAAMoC,MAAMG,OAAOhC,SA3BzE,mBA4BWP,EAAMgD,MAAME,aAAa3C,SA5BpC,yCA6BaP,EAAMoC,MAAMC,OAAO9B,SA7BhC,OA6B8CsD,EAAU,GAAG1C,KA7B3D,QA6BsEnB,EAAMgD,MAAMC,UAAU1C,SA7B5F,IAgCI,yBAAK8E,UAAW,sBAAhB,UAhCJ,gEAoCI,6BApCJ,8EAsC8DrF,EAAMgD,MAAMC,UAAU1C,SAtCpF,qBAuCgBP,EAAMoC,MAAM9B,QAAQF,KAAKG,SAvCzC,6DAyCiBP,EAAMoC,MAAM9B,QAAQH,MAAMI,SAzC3C,8CA4CI,yBAAK8E,UAAW,sBAAhB,YA5CJ,uEAiDI,6BAjDJ,oLAqDI,6BAAM,6BArDV,8GAwDI,6BAAM,6BAxDV,qIA8DI,yBAAKA,UAAW,sBAAhB,UA9DJ,sFAkEI,6BAlEJ,sDAmEqDrF,EAAMK,GAnE3D,0BAoEQL,EAAMoC,MAAM9B,QAAQF,KAAKG,SApEjC,+BAqEaP,EAAMgD,MAAME,aAAa3C,SArEtC,uBAwEI,yBAAK8E,UAAW,sBAAhB,kBAxEJ,2FA6EI,6BA7EJ,0GAxGhB,6BA8LQ,OACI,kBAAC,WAAD,KACI,yBAAKA,UAAW,sBACXlC,EAAUnD,EAAMmC,KAAK5B,WAG1B,yBAAK8E,UAAW,eAAhB,SACWrF,EAAMoC,MAAMG,OAAOhC,SAD9B,+BACoEP,EAAMmC,KAAK5B,SAD/E,uBAGuBP,EAAMoC,MAAMG,OAAOhC,SAH1C,+EAIuBP,EAAMM,QAAQI,SAASP,MAAMK,OAJpD,wCApMhB,+BAgNQ,OACI,kBAAC,WAAD,KACI,yBAAK6E,UAAW,sBACXlC,EAAUnD,EAAMoC,MAAMS,OAAOrC,SAGlC,yBAAK6E,UAAW,eAAhB,4IAEwDrF,EAAMM,QAAQI,SAASP,MAAMK,OAFrF,sCAII,6BAAK,6BAJT,gJAQI,6BAAK,6BART,uCASyCR,EAAMM,QAAQI,SAASN,KAAKG,SATrE,cAUcP,EAAMM,QAAQI,SAASP,MAAMI,SAV3C,sBAWaP,EAAMoC,MAAMG,OAAOhC,SAXhC,oBAYQP,EAAM6B,MAAMtB,SAZpB,mEAagCP,EAAMM,QAAQI,SAASP,MAAMI,SAb7D,IAcI,6BAAK,6BAdT,SAeWP,EAAM6B,MAAMtB,SAfvB,2FAgBwBP,EAAMoC,MAAMS,OAAOrC,OAhB3C,yBAtNhB,8BA6OQ,OACI,kBAAC,WAAD,KACI,yBAAK6E,UAAW,sBAAhB,YAIA,yBAAKA,UAAW,eAAhB,mTAMI,6BAAK,6BANT,sLAUI,6BAAK,6BAVT,qEAYOrF,EAAM+C,GAAG5C,MAAMI,SAZtB,MAYmCP,EAAMoC,MAAMC,OAAO9B,SAZtD,OAYoEsD,EAAU,GAAG1C,KAZjF,IAaI,6BAbJ,+FAgBI,6BAAK,6BAhBT,qEAkBOnB,EAAM+C,GAAG5C,MAAMI,SAlBtB,MAkBmCP,EAAMoC,MAAMC,OAAO9B,SAlBtD,OAkBoEsD,EAAU,GAAG1C,KAlBjF,IAmBI,6BAnBJ,qHAsBI,6BAAK,6BAtBT,gFAuBkFnB,EAAM6B,MAAMtB,SAvB9F,SAwBSP,EAAM6B,MAAMtB,SAxBrB,yDAyBI,6BAzBJ,+FAnPhB,GAAqC+E,aCK1BmE,GAAO,CACd,CACItC,KAAM,MACNuC,KAAO,kBAAC,EAAD,MACPC,MAAQ3J,EAAMK,GACduJ,QAAS,GAEb,CACIzC,KAAM,SACNuC,KAAO,kBAAC,EAAD,MACPC,MAAQxG,EAAUnD,EAAMgC,MAAMxB,QAC9BoJ,QAAS,GAEb,CACIzC,KAAO,aACPuC,KAAO,kBAAC,EAAD,MACPC,MAAQxG,EAAUnD,EAAMM,QAAQE,QAChCoJ,QAAS,GAEb,CACIzC,KAAM,SACNuC,KAAO,kBAAC,EAAD,MACPC,MAAQxG,EAAUnD,EAAMoC,MAAM5B,QAC9BoJ,QAAS,GAEb,CACIzC,KAAM,UACNuC,KAAO,kBAAC,EAAD,MACPC,MAAQxG,EAAUnD,EAAMkB,OAAOC,MAC/ByI,QAAS,GAEb,CACIzC,KAAM,aACNuC,KAAO,kBAAC,EAAD,MACPC,MAAQ3J,EAAMuB,IAAIE,OAAOjB,OACzBoJ,QAAS,GAEb,CACIzC,KAAM,QACNuC,KAAO,kBAAC,EAAD,MACPC,MAAQxG,EAAUnD,EAAM2B,KAAKC,KAC7BgI,QAAS,GAEb,CACIzC,KAAM,aACNuC,KAAO,kBAAC,EAAD,MACPC,MAAQxG,EAAUnD,EAAMY,UAAUJ,QAClCoJ,QAAS,GAEb,CACIzC,KAAM,eACNuC,KAAO,kBAAC,EAAD,MACPC,MAAQxG,EAAUnD,EAAM+B,aACxB6H,QAAS,I,oBC5DJC,GAAb,iLAGQ,OACI,yBAAKxE,UAAW,YACXoE,GAAK1D,KAAI,SAAAzE,GAAI,OACVA,EAAKsI,OAAQ,kBAAC,WAAD,CAAU5D,IAAK,QAAQyD,GAAKxD,QAAQ3E,IAApC,KACb,kBAAC,IAAD,CAAS0E,IAAK,QAAQyD,GAAKxD,QAAQ3E,GAAO+D,UAAW,gBAAiBD,GAAI9D,EAAK6F,MAC3E,0BAAM9B,UAAW,QAAS/D,EAAKqI,OAC/B,yBAAKtE,UAAW,SAAUgC,IAAK,GAAIC,IAAKwC,gBAThE,GAA8BxE,aC+BdyE,G,iLA1BR,OACI,kBAAC,WAAD,KACI,yBAAK1E,UAAW,yBACXlC,EAAUnD,EAAMC,OAGrB,kBAAC,GAAD,MAEA,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEQwJ,GAAK1D,KAAI,SAAAzE,GAAI,OAET,kBAAC,IAAD,CAAO0E,IAAK,QAAQyD,GAAKxD,QAAQ3E,GAAO6F,KAAM7F,EAAK6F,MAC9C7F,EAAKoI,gB,GAhBdpE,aCKb0E,OATf,WACE,OACI,kBAAC,IAAD,CACIC,cAAc,GAChB,kBAAC,GAAD,QCGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6eb86b21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/str.a137c671.svg\";","module.exports = __webpack_public_path__ + \"static/media/dex.d90a39cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/con.b17b5623.svg\";","module.exports = __webpack_public_path__ + \"static/media/wis.35805527.svg\";","module.exports = __webpack_public_path__ + \"static/media/int.5767b092.svg\";","module.exports = __webpack_public_path__ + \"static/media/cha.f71ed02d.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.c93df555.svg\";","module.exports = __webpack_public_path__ + \"static/media/d20.49caa2de.svg\";","\nexport var terms = {\n    game : \"Dungeons & Dragons\",\n    party : {\n        short : \"party\",\n        long : \"adventuring party\"\n    },\n    gm : \"GM\",\n    ability : {\n        singular : \"ability\",\n        plural : \"abilities\",\n        score : {\n            long : {\n                singular: \"ability score\",\n                plural: \"ability scores\"\n            },\n            short : {\n                singular : \"score\",\n                plural : \"scores\"\n            }\n        },\n        modifier : {\n            long : {\n                singular: \"ability modifier\",\n                plural: \"ability modifiers\"\n            },\n            short : {\n                singular : \"modifier\",\n                plural : \"modifiers\"\n            }\n        }\n    },\n    skill : {\n        singular : \"skill\",\n        plural : \"skills\"\n    },\n    alignment : {\n        singular : \"alignment\",\n        plural : \"alignments\",\n        law : \"Lawful\",\n        chaos : \"Chaotic\",\n        neutral : \"Neutral\",\n        good : \"Good\",\n        evil : \"Evil\"\n    },\n    combat : {\n        name : \"combat\",\n        init : \"Initiative\",\n        surprise : \"surprise\"\n    },\n    item : {\n      singular : \"item\",\n      plural : \"items\"\n    },\n    hit : {\n        die : {\n            singular: \"Hit Die\",\n            plural: \"Hit Dice\"\n        },\n        points : {\n            singular : \"Hit Point\",\n            plural : \"Hit Points\",\n            max : \"Max Hit Points\"\n        }\n    },\n    rest : {\n        short : \"short rest\",\n        long : \"long rest\",\n        name : \"rest\",\n        inf : \"resting\"\n    },\n    spell : {\n        singular : \"spell\",\n        plural : \"spells\"\n    },\n    traits : {\n        singular : \"trait\",\n        plural : \"traits\"\n    },\n    inspiration : \"Inspiration\",\n    level : {\n        singular : \"level\",\n        plural : \"levels\",\n        up : {\n            inf : {\n                singular: \"subir un level\",\n                plural: \"subir unos levels\"\n            },\n            person : {\n                singular: \"sube un level\",\n                plural: \"subes unos levels\"\n            }\n        }\n    },\n    crit : {\n        singular : \"critical hit\",\n        plural : \"critical hits\"\n    },\n    rolls : {\n        singular : \"roll\",\n        plural : \"rolls\",\n        ability : {\n            long: {\n                singular: \"ability check\",\n                plural: \"ability checks\"\n            },\n            short: {\n                singular: \"check\",\n                plural: \"checks\"\n            }\n        },\n        saving : {\n            singular: \"saving throw\",\n            plural: \"saving throws\",\n            death : {\n                singular : \"death saving throw\",\n                plural : \"death saving throws\"\n            }\n        },\n        attack : {\n            singular : \"attack roll\",\n            plural : \"attack rolls\"\n        },\n        passive : {\n            singular : \"passive check\",\n            plural : \"passive checks\"\n        },\n        group : {\n            singular : \"group check\",\n            plural : \"group checks\",\n            objective : {\n                singular : \"group objective check\",\n                plural : \"group objective checks\"\n            },\n            majority : {\n                singular : \"group majority check\",\n                plural : \"group majority checks\"\n            }\n        },\n        contest : {\n            singular : \"contest\",\n            plural : \"contests\"\n        },\n        damage : {\n            singular : \"damage roll\",\n            plural : \"damage rolls\"\n        }\n    },\n    dc : {\n        long : {\n            singular : \"Difficulty Check\",\n            plural : \"Difficulty Checks\"\n        },\n        short : {\n            singular : \"DC\",\n            plural : \"DCs\"\n        }\n    },\n    ac : {\n        long : {\n            singular : \"Armor Class\",\n            plural : \"Armor Classes\"\n        },\n        short : {\n            singular : \"AC\",\n            plural : \"ACs\"\n        }\n    },\n    bonus : {\n        advantage : {\n            singular : \"advantage\",\n            plural : \"advantages\"\n        },\n        disadvantage : {\n            singular : \"disadvantage\",\n            plural : \"disadvantage\"\n        }\n    }\n};\n\n","\nexport function titleCase(string) {\n    var sentence = string.toLowerCase().split(\" \");\n    for(var i = 0; i< sentence.length; i++){\n        sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n    }\n    return sentence.join(\" \");\n}","import {terms} from \"./Terms\";\nimport str from '../Assets/str.svg';\nimport dex from '../Assets/dex.svg';\nimport con from '../Assets/con.svg';\nimport wis from '../Assets/wis.svg';\nimport int from '../Assets/int.svg';\nimport cha from '../Assets/cha.svg';\n\nexport var abilities = [\n    {\n        name : \"Fuerza\",\n        code : \"STR\",\n        url : \"/abilities/str\",\n        icon : str,\n        description_short : \"Mide poder fisico.\",\n        description_long : \"La fuerza mide el poder corporal, el entrenamiento atlético y \" +\n            \"la medida en que puede ejercer fuerza física bruta.\",\n        description_checks : \"Un \" + terms.rolls.ability.short.singular + \" de fuerza puede modelar cualquier intento de levantar, \" +\n            \"empujar, tirar o romper algo, forzar su cuerpo a atravesar un espacio o aplicar fuerza \" +\n            \"bruta a una situación.\",\n        checks : [\n            \"Forzar una puerta atascada, bloqueada o enrejada\",\n            \"Libérarse de esposas\",\n            \"Empujarse a través de un túnel que es demasiado pequeño\",\n            \"Aferrarse a un carruaje mientras es arrastrado detrás de él\",\n            \"Voltear una estatua\",\n            \"Evitar que una roca ruede\"\n        ],\n        skills : [\n            \"Atletismo\"\n        ]\n    },\n    {\n        name : \"Destreza\",\n        code : \"DEX\",\n        url : \"/abilities/dex\",\n        icon : dex,\n        description_short : \"Mide la agilidad.\",\n        description_long : \"La destreza mide la agilidad, los reflejos y el equilibrio.\",\n        description_checks : \"Un \" + terms.rolls.ability.short.singular + \" de destreza puede modelar cualquier intento de \" +\n            \"moverse ágil, rápida o silenciosamente, o evitar caerse sobre una base difícil.\",\n        checks : [\n            \"Forzar una puerta atascada, bloqueada o enrejada\",\n            \"Libérarse de esposas\",\n            \"Empujarse a través de un túnel que es demasiado pequeño\",\n            \"Aferrarse a un carruaje mientras es arrastrado detrás de él\",\n            \"Voltear una estatua\",\n            \"Evitar que una roca ruede\"\n        ],\n        skills : [\n            \"Acrobacias\",\n            \"Sigilo\",\n            \"Juego de manos\"\n        ]\n    },\n    {\n        name : \"Complexión\",\n        code : \"CON\",\n        url : \"/abilities/con\",\n        icon : con,\n        description_short : \"Mide la resistencia.\",\n        description_long : \"La complexión mide la salud, la resistencia y la fuerza vital.\",\n        description_checks : \"Los \" + terms.rolls.ability.short.singular + \" de complexión son poco comunes, y no se aplican\" +\n            \" habilidades a los controles de constitución, porque la resistencia que representa\" +\n            \" esta habilidad es en gran medida pasiva en lugar de implicar un esfuerzo específico\" +\n            \" por parte de un personaje o monstruo.\",\n        checks : [\n            \"Contener la respiración\",\n            \"Marchar o trabajar durante horas sin descanso\",\n            \"Pasar de largo\",\n            \"Sobrevivir sin comida ni agua\",\n            \"Fondo blanco de un solo\"\n        ],\n        skills : [\n            \"\"\n        ]\n    },\n    {\n        name : \"Inteligencia\",\n        code : \"INT\",\n        url : \"/abilities/int\",\n        icon : int,\n        description_short : \"Mide el razonamiento y la memoria.\",\n        description_long : \"La inteligencia mide la agudeza mental, la precisión de los recuerdos\" +\n            \" y la capacidad de razonar.\",\n        description_checks : \"Un \" + terms.rolls.ability.short.singular + \" de inteligencia entra en juego cuando se necesita recurrir \" +\n            \"a la lógica, la educación, la memoria o el razonamiento deductivo.\",\n        checks : [\n            \"Comunicarse con una criatura sin usar palabras.\",\n            \"Estimar el valor de un objeto precioso\",\n            \"Armar un disfraz para hacerse pasar como guardia de la ciudad\",\n            \"Falsificar un documento\",\n            \"Recordar la historia de una artesanía o comercio\",\n            \"Ganar un juego de habilidad.\"\n        ],\n        skills : [\n            \"Arcana\",\n            \"Historia\",\n            \"Investigación\",\n            \"Naturaleza\",\n            \"Religión\"\n        ]\n    },\n    {\n        name : \"Sabiduría\",\n        code : \"WIS\",\n        url : \"/abilities/wis\",\n        icon : wis,\n        description_short : \"Mide la percepción y perspicacia.\",\n        description_long : \"La sabiduría refleja cuán sintonizado estás con el mundo que \" +\n            \"te rodea y representa la percepción y la intuición.\",\n        description_checks : \"Un \" + terms.rolls.ability.short.singular + \" de sabiduría podría reflejar un esfuerzo por\" +\n            \" leer el lenguaje corporal, comprender los sentimientos de alguien, notar cosas \" +\n            \"sobre el medio ambiente o cuidar a una persona lesionada.\",\n        checks : [\n            \"Tener una intuición sobre qué curso de acción seguir\",\n            \"Discernir si una criatura aparentemente muerta o viva es muerto viviente\"\n        ],\n        skills : [\n            \"Manejo de animales\",\n            \"Percepción\",\n            \"Perspicacia\",\n            \"Medicina\",\n            \"Supervivencia\"\n        ]\n    },\n    {\n        name : \"Carisma\",\n        code : \"CHA\",\n        url : \"/abilities/cha\",\n        icon : cha,\n        description_short : \"Mide la fuerza de personalidad.\",\n        description_long : \"La carisma mide tu habilidad para interactuar efectivamente con \" +\n            \"otros. Incluye factores como la confianza y la elocuencia, y puede representar\" +\n            \" una personalidad encantadora o dominante.\",\n        description_checks : \"Puede surgir un \" + terms.rolls.ability.short.singular + \" de carisma cuando intentas influir o \" +\n            \"entretener a otros, cuando tratas de causar una impresión o decir una mentira \" +\n            \"convincente, o cuando estás navegando por una situación social difícil.\",\n        checks : [\n            \"Encontrar a la mejor persona para hablar sobre noticias, rumores y chismes.\",\n            \"Mezclarse en una multitud para entender los temas clave de conversación\"\n        ],\n        skills : [\n            \"Engaño\",\n            \"Intimidación\",\n            \"Actuación\",\n            \"Persuasión\"\n        ]\n    },\n];","import React, {Component, Fragment} from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport class ArrowBtn extends Component {\n\n    state = {\n        text : \"\",\n        url : \"\",\n        back : false\n    };\n\n    componentDidUpdate() {\n        this.updateState();\n    }\n\n    componentDidMount() {\n        this.updateState();\n    }\n\n    updateState() {\n        if (this.props.text !== this.state.text || this.props.url !== this.state.url || this.props.back !== this.state.back) {\n            this.setState({\n                text : this.props.text,\n                url : this.props.url,\n                back : this.props.back\n            })\n        }\n    }\n\n    render() {\n        let {text, url, back} = this.state;\n        return (\n            <Link to={url} className={'arrow-btn serif '+(!back? 'border-left' : 'border-right')}>\n                {back?\n                    <div className={'arrow-btn-head'}>\n                    </div>\n                :\n                    <Fragment></Fragment>\n                }\n                <div className={'arrow-btn-body'}>\n                    {text}\n                </div>\n                {!back ?\n                    <div className={'arrow-btn-tail'}>\n                    </div>\n                    :\n                    <Fragment></Fragment>\n                }\n            </Link>\n        );\n    }\n}\n","import React, {Component, Fragment} from 'react';\nimport {abilities} from '../../Data/Abilities';\nimport {terms} from '../../Data/Terms';\nimport {titleCase} from '../../Utilities';\nimport {ArrowBtn} from \"../ArrowBtn\";\n\nexport class Ability extends Component {\n\n    state = {\n        abilityID : -1,\n        abilityInfo : {}\n    };\n\n    componentDidMount() {\n        this.setAbility(this.props.info);\n    }\n\n    componentDidUpdate() {\n        this.setAbility(this.props.info);\n    }\n\n    setAbility( id ) {\n        if (id !== this.state.abilityID) {\n            this.setState({\n                abilityID : id,\n                abilityInfo : abilities[id]\n            })\n        }\n    }\n\n    render() {\n        let {abilityID, abilityInfo} = this.state;\n\n        if (abilityID === -1) {\n            return <div className={'section'}> No ability. </div>;\n        } else {\n            return this.correctHTML(abilityInfo, abilityID);\n        }\n    }\n\n    correctHTML(data, id) {\n\n        return(\n            <Fragment>\n\n                <div className={'ability-header'}>\n                    <div className={'header1 name serif bold'}>\n                        {data.name}\n                    </div>\n\n                    <div className={'code'}>\n                        {data.code}\n                    </div>\n                </div>\n\n                <div className={'description'}>\n                    {data.description_long}\n                </div>\n\n                <div className={'header2 bold serif'}>\n                    {titleCase(terms.skill.plural)}\n                </div>\n\n                <ul>\n                    {\n                    data.skills.map(item =>\n                        <li key={data.skills.indexOf(item)} className={'item sans'}>\n                            {item}\n                        </li>\n                    )\n                    }\n                </ul>\n\n                <div className={'header2 bold serif'}>\n                    {titleCase(\n                        terms.rolls.ability.short.plural\n                        +\" de \"+\n                        data.name\n                    )}\n                </div>\n\n                <div className={'description'}>\n                    {data.description_checks}\n\n                    <ul>\n                        {\n                        data.checks.map(item => { return(\n                            <li key={data.checks.indexOf(item)} className={'item sans'}>\n                                 {item}\n                            </li>\n                        )})\n                        }\n                    </ul>\n                </div>\n\n                <ArrowBtn url={'/rolls/check'} back={false} text={titleCase(terms.rolls.ability.long.plural)}/>\n            </Fragment>\n\n        );\n    }\n\n}\n","import React, {Component, Fragment} from 'react';\n\nexport class AbilityModsTable extends Component {\n    render() {\n        return (\n            <Fragment>\n                <table className={'abmod-table'}>\n                    <thead>\n                    <tr>\n                        <td>Score</td>\n                        <td>Modifier</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>1</td>\n                        <td>−5</td>\n                    </tr>\n                    <tr>\n                        <td>2–3</td>\n                        <td>−4</td>\n                    </tr>\n                    <tr>\n                        <td>4–5</td>\n                        <td>−3</td>\n                    </tr>\n                    <tr>\n                        <td>6–7</td>\n                        <td>−2</td>\n                    </tr>\n                    <tr>\n                        <td>8–9</td>\n                        <td>−1</td>\n                    </tr>\n                    <tr>\n                        <td>10–11</td>\n                        <td>+0</td>\n                    </tr>\n                    <tr>\n                        <td>12–13</td>\n                        <td>+1</td>\n                    </tr>\n                    <tr>\n                        <td>14–15</td>\n                        <td>+2</td>\n                    </tr>\n                    <tr>\n                        <td>16–17</td>\n                        <td>+3</td>\n                    </tr>\n                    <tr>\n                        <td>18–19</td>\n                        <td>+4</td>\n                    </tr>\n                    <tr>\n                        <td>20–21</td>\n                        <td>+5</td>\n                    </tr>\n                    <tr>\n                        <td>22–23</td>\n                        <td>+6</td>\n                    </tr>\n                    <tr>\n                        <td>24–25</td>\n                        <td>+7</td>\n                    </tr>\n                    <tr>\n                        <td>26–27</td>\n                        <td>+8</td>\n                    </tr>\n                    <tr>\n                        <td>28–29</td>\n                        <td>+9</td>\n                    </tr>\n                    <tr>\n                        <td>30</td>\n                        <td>+10</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </Fragment>\n        );\n    }\n}\n","import {terms} from \"./Data/Terms\";\nimport React, {Fragment} from \"react\";\nimport {titleCase} from \"./Utilities\";\nimport {abilities} from \"./Data/Abilities\";\n\nexport function diceRolls(subtitle = true) {\n    return (\n        <Fragment>\n\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.rolls.plural)}\n            </div>\n\n            <div className={'description'}>\n                El juego tiene tres {terms.rolls.plural} principales:\n                <ul>\n                    <li> {titleCase(terms.rolls.ability.long.plural)} </li>\n                    <li> {titleCase(terms.rolls.saving.plural)} </li>\n                    <li> {titleCase(terms.rolls.attack.plural)} </li>\n                </ul>\n                Estos se basan en las seis {terms.ability.plural}.\n                <br /><br />\n                Los tres {terms.rolls.plural} funcionan de la siguiente forma:\n                <ol>\n                    <li> Tirar un d20 </li>\n                    <li> Agregar un {terms.ability.modifier.long.singular} derivado de una de las seis {terms.ability.plural} </li>\n                    <li> Comparar el total con un número objetivo </li>\n                </ol>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport function passive(subtitle = true) {\n    return (\n        <Fragment>\n\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.rolls.passive.plural)}\n            </div>\n\n            <div className={'description'}>\n                Un {terms.rolls.passive.singular} es un tipo especial\n                de {terms.rolls.ability.long.singular} que no\n                involucra {terms.rolls.plural}.\n                <br /><br />\n                Tal {terms.rolls.ability.short.singular} puede representar\n                el resultado promedio de una tarea realizada repetidamente,\n                como buscar puertas secretas una y otra vez, o puede usarse\n                cuando el {terms.gm} quiere determinar en secreto si los personajes\n                tienen éxito en algo sin tirar dados, como notar un monstruo escondido.\n                <br /><br />\n                Aquí se explica cómo determinar el total de un personaje para\n                un {terms.rolls.passive.singular}:\n                <br />\n                10 + todos los {terms.ability.modifier.short.plural} que normalmente se aplican\n                al {terms.rolls.ability.short.singular}.\n                <br /><br />\n                Si el personaje tiene {terms.bonus.advantage.singular} en el {terms.rolls.ability.short.singular},\n                suma 5.<br />\n                Para {terms.bonus.disadvantage.singular}, resta 5.<br />\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport function groupChecks(subtitle = true) {\n    return (\n        <Fragment>\n\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.rolls.group.plural)}\n            </div>\n\n            <div className={'description'}>\n                Cuando la {terms.party.short} intenta lograr algo en conjunto,\n                el {terms.gm} puede solicitar un {terms.rolls.group.singular}.\n\n                <div className={'header3 serif'}>\n                    {titleCase(terms.rolls.group.majority.plural)}\n                </div>\n\n                En un {terms.rolls.group.majority.singular}, todos los miembros de\n                la {terms.party.short} hacen un {terms.rolls.ability.long.singular}.\n                <br /><br />\n                Si al menos la mitad de la {terms.party.short} tiene éxito,\n                la {terms.party.short} tiene éxito, de lo contrario, la {terms.party.short} falla.\n\n                <div className={'header3 serif'}>\n                    {titleCase(terms.rolls.group.objective.plural)}\n                </div>\n\n                En un {terms.rolls.group.objective.singular}, todos los miembros de\n                la {terms.party.short} hacen un {terms.rolls.ability.long.singular}.\n                <br /><br />\n                Si la suma de los {terms.rolls.ability.long.plural} de\n                la {terms.party.short} sobrepasa un objetivo, la {terms.party.short} tiene\n                éxito, de lo contrario, la {terms.party.short} falla.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function contests(subtitle = true) {\n    return (\n        <Fragment>\n\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.rolls.contest.plural)}\n            </div>\n\n            <div className={'description'}>\n                Una {terms.rolls.contest.singular} sucede cuando los\n                esfuerzos de un personaje o monstruo se oponen directamente\n                a los de otro. Esto puede ocurrir cuando ambos intentan hacer\n                lo mismo y solo uno puede tener éxito, o cuando uno de ellos\n                está tratando de evitar que el otro logre un objetivo.\n                <br /><br />\n                Ambos participantes de una {terms.rolls.contest.singular} hacen\n                un {terms.rolls.ability.long.singular}, pero\n                en lugar de comparar el total con un {terms.dc.short.singular}, comparan los totales\n                de sus dos {terms.rolls.ability.short.singular}.\n                <br /><br />\n                El participante con el {terms.rolls.ability.short.singular}\n                más alto gana el concurso.\n\n                Si la {terms.rolls.contest.singular} resulta en un empate, la situación sigue siendo\n                la misma que antes de la {terms.rolls.contest.singular}.\n                Por lo tanto, un concursante podría ganar\n                la {terms.rolls.contest.singular} por defecto.\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport function abilityChecks(subtitle = true) {\n    return (\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.rolls.ability.short.plural)}\n            </div>\n\n            <div className={'description'}>\n                Un {terms.rolls.ability.long.singular} pone a prueba el talento innato y el\n                entrenamiento de un personaje o monstruo en un esfuerzo\n                por superar un desafío. El {terms.gm} pide un {terms.rolls.ability.long.singular} cuando\n                un personaje o monstruo intenta una acción\n                (que no sea un ataque) que tiene la posibilidad de fallar.\n                Cuando el resultado es incierto, los dados determinan los resultados.\n                <br/><br/>\n                Para cada {terms.rolls.ability.long.singular}, el {terms.gm} decide cuál\n                de las seis {terms.ability.plural} es relevante para la tarea en cuestión\n                y la dificultad de la tarea, representada por un {terms.dc.long.singular}.\n                <br /><br />\n                Cuanto más difícil es una tarea, mayor es su {terms.dc.short.singular}.\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport function abilityIntro(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.ability.plural)}\n            </div>\n\n            <div className={'description'}>\n                Las seis {terms.ability.plural} proporcionan una descripción rápida\n                de las características físicas y mentales de cada criatura.\n                <br /><br />\n                Cada tarea que un personaje o monstruo podría intentar\n                en el juego está cubierta por una de las seis {terms.ability.plural}.\n                <br /><br />\n                Esta sección explica con más detalle lo que significan\n                esas {terms.ability.plural} y las formas en que se usan en el juego.\n\n            </div>\n        </Fragment>\n    );\n}\n\nexport function attackRolls(subtitle = true) {\n    return (\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.rolls.attack.plural)}\n            </div>\n\n            <div className={'description'}>\n                Un {terms.rolls.attack.singular} determina si un ataque\n                golpea o falla.\n                <br /><br />\n                Para hacer un {terms.rolls.attack.singular}, tira un d20 y agrega\n                los {terms.ability.modifier.short.plural} apropiados.\n                <br /><br />\n                Si el total del {terms.rolls.attack.singular} es igual o superior\n                al {terms.ac.long.singular} del objetivo, el ataque golpea.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function savingThrows(subtitle = true) {\n    return (\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.rolls.saving.plural)}\n            </div>\n\n            <div className={'description'}>\n                Un {terms.rolls.saving.singular} representa un intento\n                de resistir una amenaza. Usualmente, estás obligado a\n                hacer un {terms.rolls.saving.singular} porque tu personaje está en riesgo.\n                <br /><br />\n                Para hacer un {terms.rolls.saving.singular}, tira un d20 y\n                agrega el {terms.ability.modifier.long.singular} apropiado.\n                <br /><br />\n                La {terms.dc.long.singular} para un {terms.rolls.saving.singular}\n                está determinada por el efecto que lo causa.\n                <br /><br />\n                El resultado de un {terms.rolls.saving.singular} exitoso o\n                fallido también se detalla en el efecto que lo permite.\n                Por lo general, un exito significa que una criatura no sufre daño, o se reduce\n                el daño.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function alignment(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.alignment.plural)}\n            </div>\n\n            <div className={'description'}>\n                Una criatura típica en el mundo del juego tiene un {terms.alignment.singular},\n                que describe ampliamente sus actitudes morales y personales.\n                <br /><br />\n                El {terms.alignment.singular} es una combinación de dos factores: uno identifica la moralidad\n                ({terms.alignment.good+\", \"+terms.alignment.neutral+\", \"+terms.alignment.evil}),\n                y el otro describe las actitudes hacia la sociedad y el orden\n                ({terms.alignment.law+\", \"+terms.alignment.neutral+\", \"+terms.alignment.chaos}).\n                <br /><br />\n                Los individuos pueden variar significativamente\n                del comportamiento típico, y pocas personas son perfectas y consistentemente fieles a\n                los preceptos de su {terms.alignment.singular}.\n\n                {axis(terms.alignment.law+\" \"+terms.alignment.good+\" (LG)\",\n                    \"Hacen lo correcto como lo espera la sociedad.\")}\n\n                {axis(terms.alignment.neutral+\" \"+terms.alignment.good+\" (NG)\",\n                    \"Hacen lo mejor que pueden para ayudar a otros según sus necesidades.\")}\n\n                {axis(terms.alignment.chaos+\" \"+terms.alignment.good+\" (CG)\",\n                    \"Actúan como lo dirige su conciencia, con poca consideración por lo que otros esperan.\")}\n\n                {axis(terms.alignment.law+\" \"+terms.alignment.neutral+\" (LN)\",\n                    \"Actúan de acuerdo con la ley, la tradición o los códigos personales.\")}\n\n                {axis(terms.alignment.neutral+\" (N)\",\n                    \"Prefieren mantenerse alejados de las cuestiones morales y no tomar partido, haciendo lo que parece mejor en ese momento.\")}\n\n                {axis(terms.alignment.chaos+\" \"+terms.alignment.neutral+\" (CN)\",\n                    \"Siguen sus caprichos, manteniendo su libertad personal por encima de todo.\")}\n\n                {axis(terms.alignment.law+\" \"+terms.alignment.evil+\" (LE)\",\n                    \"Toman metódicamente lo que quieren, dentro de los límites de un código de tradición, lealtad u orden.\")}\n\n                {axis(terms.alignment.neutral+\" \"+terms.alignment.evil+\" (NE)\",\n                    \"Hacen lo que pueden, sin compasión ni reparos.\")}\n\n                {axis(terms.alignment.chaos+\" \"+terms.alignment.evil+\" (CE)\",\n                    \"Actúan con violencia arbitraria, impulsadas por su codicia, u odio.\")}\n            </div>\n        </Fragment>\n    )\n}\n\nfunction axis(name, description) {\n    return (\n        <div>\n            <div className={'header3 serif'}>\n                {name}\n            </div>\n            <div>\n                {description}\n            </div>\n        </div>\n    )\n}\n\nexport function level(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {titleCase(terms.level.plural)}\n            </div>\n\n            <div className={'description'}>\n                A medida que un personaje avanza en aventuras y supera desafíos,\n                este realizará impresionantes hazañas y vencerá enemigos formidables.\n                Al hacer esto, un personaje puede {terms.level.up.inf.singular}.\n                <br /><br />\n                Cuando un personaje {terms.level.up.person.singular}, su clase a menudo otorga\n                características adicionales, como se detalla en la descripción\n                de la clase.\n                <br /><br />\n                Ademas, cada cuatro {terms.level.plural}, puede aumentar\n                sus {terms.ability.score.long.plural}, ya sea aumentando\n                dos {terms.ability.score.short.plural} en 1 cada\n                uno o aumentando un {terms.ability.score.short.singular} en 2.\n                No puede aumentar un {terms.ability.score.long.singular} por encima de 20.\n                <br /><br />\n                Cada vez que {terms.level.up.person.singular}, ganas 1 {terms.hit.die.singular} adicional.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function hitDice(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {terms.hit.die.plural}\n            </div>\n\n            <div className={'description'}>\n                Un personaje puede gastar uno o más {terms.hit.die.plural} al final de un {terms.rest.short},\n                hasta el número de {terms.hit.die.plural} que tenga restantes. El numero maximo\n                de {terms.hit.die.plural} de un personaje es igual al {terms.level.singular} del personaje.\n                <br /><br />\n                Por cada {terms.hit.die.singular} gastado de esta manera,\n                el jugador tira el {terms.hit.die.singular} y le agrega\n                el {terms.ability.modifier.short.singular} de {abilities[3].name} del personaje.\n                El personaje recupera {terms.hit.points.plural} igual al total.\n                <br /><br />\n                Un personaje recupera algunos {terms.hit.die.plural} gastados al terminar\n                un {terms.rest.long}.\n                <br /><br />\n                Cada vez que {terms.level.up.person.singular},\n                incrementa su numero maximo de {terms.hit.die.singular} por 1.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function maxHitPoints(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {terms.hit.points.max}\n            </div>\n\n            <div className={'description'}>\n                Unos personajes son mas fuertes que otros, y pueden soportar\n                una mayor cantidad de daño que otros. Esto se ve reflejado\n                en los {terms.hit.points.max}.\n                <br /><br />\n                Los {terms.hit.points.plural} actuales no sobrepasan los {terms.hit.points.max}.\n            </div>\n            {gainMaxHP()}\n        </Fragment>\n    )\n}\n\nfunction gainMaxHP(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                Aumentar los {terms.hit.points.max}\n            </div>\n\n            <div className={'description'}>\n                Al {terms.level.up.inf.singular}, tire un {terms.hit.die.singular},\n                agregue su {terms.ability.modifier.short.singular} de {abilities[2].name} al {terms.rolls.singular} y\n                agregue el total a sus {terms.hit.points.max}.\n                <br /><br />\n                Ademas, cuando su {terms.ability.modifier.short.singular} de {abilities[2].name} aumenta en 1,\n                sus {terms.hit.points.max} aumentan en 1 por cada nivel que ha alcanzado.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function hitPoints(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                {terms.hit.points.plural}\n            </div>\n\n            <div className={'description'}>\n                Los {terms.hit.points.plural} representan una combinación de durabilidad física y mental,\n                la voluntad de vivir y la suerte. Las criaturas con más puntos de vida son más\n                difíciles de matar. Aquellos con menos puntos de vida son más frágiles.\n                <br /><br />\n                Los {terms.hit.points.plural} actuales de una criatura (generalmente llamados {terms.hit.points.plural})\n                puede ser cualquier número desde los {terms.hit.points.max} hasta 0.\n                Este número cambia con frecuencia a medida que recibe daño o curación.\n                <br /><br />\n                Cada vez que una criatura recibe daño, ese daño se resta de sus {terms.hit.points.plural}. La\n                pérdida de {terms.hit.points.plural} no tiene efecto en las capacidades de una criatura hasta\n                que la criatura caiga a 0 {terms.hit.points.plural}.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function healing(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                Curar\n            </div>\n\n            <div className={'description'}>\n                A menos que resulte en muerte, el daño no es permanente.\n                <br />\n                Incluso la muerte es reversible a través de poderosa magia.\n                <br />\n                El {terms.rest.name} puede restaurar los {terms.hit.points.plural} de una criatura,\n                y {terms.spell.plural} o {terms.item.plural} pueden eliminar el daño en un instante.\n                <br /><br />\n                Cuando una criatura recibe curación de cualquier tipo,\n                los {terms.hit.points.plural} recuperados se agregan a sus {terms.hit.points.plural} actuales.\n                Los {terms.hit.points.plural} de una criatura no pueden exceder sus {terms.hit.points.max},\n                por lo que se pierden los {terms.hit.points.plural}  recuperados\n                en exceso de este número.\n                <br /><br />\n                Una criatura que ha muerto no puede recuperar {terms.hit.points.plural}  hasta\n                que la magia le haya devuelto la vida.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function noHitPoints(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                Caer a 0 {terms.hit.points.plural}\n            </div>\n\n            <div className={'description'}>\n                Cuando cae a 0 {terms.hit.points.plural},\n                muere directamente o queda inconsciente.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function knockedOut(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                Inconsciencia Inestable\n            </div>\n\n            <div className={'description'}>\n                Si el daño lo reduce a 0 {terms.hit.points.plural} y no lo mata,\n                cae inconsciente. Esta inconsciencia\n                termina si recupera cualquier {terms.hit.points.singular}.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function death(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                Muerte Directa\n            </div>\n\n            <div className={'description'}>\n                El daño masivo puede matar al instante.\n                Cuando un daño te reduce a 0 {terms.hit.points.plural} y queda daño restante,\n                muere si el daño restante es igual o superior a su {terms.hit.points.max}.\n            </div>\n        </Fragment>\n    )\n}\n\nexport function stableDeath(subtitle = true) {\n    return(\n        <Fragment>\n            <div className={(subtitle? 'header2' : 'header1') +' serif bold'}>\n                Estabilización\n            </div>\n\n            <div className={'description'}>\n                Siempre que comience un turno con 0 {terms.hit.points.plural}, debe hacer\n                un {terms.rolls.saving.singular} especial, llamado {terms.rolls.saving.death.singular},\n                para determinar si se acerca más a la muerte o se aferras a la vida.\n                <br /><br />\n                A diferencia de otros {terms.rolls.saving.plural}, este no está vinculado a\n                ningún {terms.ability.score.long.singular}.\n\n                <ul>\n                    <li> Si el {terms.rolls.saving.death.singular} es 10 o más, es un éxito. De lo contrario, una falla.\n                    </li>\n                    <li> Si saca un 1, cuenta como dos fallas.\n                    </li>\n                    <li> Si saca un 20, recuperas 1 {terms.hit.points.singular}.\n                    </li>\n                    <li> Si recibe algún daño en este estado, sufre una falla.\n                    </li>\n                    <li> Si el daño es un {terms.crit.singular}, sufre dos fallas.\n                    </li>\n                    <li> Si el daño es igual o superior a sus {terms.hit.points.max}, muere.\n                    </li>\n                </ul>\n\n                En su tercer éxito, se vuelvs estable.<br />\n                En su tercer fracaso, muere.<br />\n                <br />\n                Los éxitos o fracasos no necesitan ser consecutivos. El número de ambos se restablece a cero\n                cuando recupera cualquier punto de vida o se estabiliza.\n                <br /><br />\n            </div>\n        </Fragment>\n    )\n}\n","import React, {Component, Fragment} from 'react';\nimport {AbilityModsTable} from \"../AbilityModsTable\";\nimport {terms} from \"../../Data/Terms\";\nimport {abilityChecks, abilityIntro, level} from \"../../Parts\";\nimport {titleCase} from \"../../Utilities\";\nimport {ArrowBtn} from \"../ArrowBtn\";\n\nexport class Intro extends Component {\n\n    render() {\n        return (\n            <Fragment>\n                {abilityIntro(false)}\n                {this.modifierSection()}\n                {abilityChecks()}\n                <ArrowBtn url={'/rolls/check'} back={false} text={titleCase(terms.rolls.ability.long.plural)}/>\n                {level()}\n                <ArrowBtn url={'/level'} back={false} text={titleCase(terms.level.plural)}/>\n            </Fragment>\n        );\n    }\n\n    modifierSection() {\n        return(\n            <Fragment>\n\n                <div className={'ability-info'}>\n                    <div>\n                        {this.modifiers()}\n                        {this.skills()}\n                    </div>\n\n                    <AbilityModsTable />\n\n                </div>\n\n            </Fragment>\n        )\n    }\n\n    modifiers() {\n        return (\n            <Fragment>\n\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.ability.modifier.short.plural)}\n                </div>\n\n                <div className={'description'}>\n                    Cada una de las {terms.ability.plural} de una criatura tiene una puntuación\n                    que define la magnitud de esa {terms.ability.singular}, un {terms.ability.score.long.singular}.\n                    <br /> <br />\n                    Un {terms.ability.score.long.singular} no es solo una medida de las {terms.ability.plural} innatas,\n                    sino que también abarca el entrenamiento y la competencia de una criatura\n                    en actividades relacionadas con esa {terms.ability.singular}.\n                    <br /> <br />\n                    Cada {terms.ability.singular} también tiene un {terms.ability.modifier.short.singular}, derivado de\n                    su {terms.ability.score.short.singular} y que varía de −5 a +10.\n                    <br /> <br />\n                    Para determinar un {terms.ability.modifier.long.singular} sin consultar la tabla, resta\n                    10 del {terms.ability.score.long.singular} y luego divide por 2, redondeando hacia abajo.\n                    <br /> <br />\n                    Debido a que los {terms.ability.modifier.long.plural} afectan a casi todos los tres\n                    rolls principales, los {terms.ability.modifier.long.plural} son utilizados con más\n                    frecuencia que sus {terms.ability.score.short.singular} asociados.\n                    <br /> <br />\n                </div>\n\n            </Fragment>\n        )\n    }\n\n    skills() {\n        return (\n            <Fragment>\n\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.skill.plural)}\n                </div>\n\n                <div className={'description'}>\n                    Cada {terms.ability.singular} cubre una amplia gama de capacidades,\n                    incluidas las {terms.skill.plural} en las que un personaje o\n                    un monstruo pueden ser competentes. Una {terms.skill.singular} representa\n                    un aspecto específico de un {terms.ability.score.long.singular},\n                    y la habilidad de un individuo en\n                    una {terms.skill.plural} demuestra un enfoque en ese aspecto.\n                </div>\n\n            </Fragment>\n        )\n    }\n\n}\n","import React, {Component, Fragment} from 'react';\nimport {Ability} from \"./Ability\";\nimport {Intro} from \"./Intro\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport about from '../../Assets/about.svg';\nimport {abilities} from \"../../Data/Abilities\";\n\nexport class AbilityComponent extends Component {\n\n    render() {\n        return (\n            <div className={'page'}>\n                <div className={'ability-menu'}>\n\n                    {this.abilityIcon(about, \"Información\", '/abilities')}\n                    {abilities.map(item =>\n                        <Fragment key={abilities.indexOf(item)}>\n                            {this.abilityIcon(item.icon, item.name, item.url)}\n                        </Fragment>\n                    )}\n\n                </div>\n\n                <div className={'page-body'}>\n                    <Switch>\n                        <Route exact path=\"/abilities\">\n                            <Intro />\n                        </Route>\n                        <Route exact path=\"/abilities/str\">\n                            <Ability info={0}/>\n                        </Route>\n                        <Route exact path=\"/abilities/dex\">\n                            <Ability info={1}/>\n                        </Route>\n                        <Route exact path=\"/abilities/con\">\n                            <Ability info={2}/>\n                        </Route>\n                        <Route exact path=\"/abilities/int\">\n                            <Ability info={3}/>\n                        </Route>\n                        <Route exact path=\"/abilities/wis\">\n                            <Ability info={4}/>\n                        </Route>\n                        <Route exact path=\"/abilities/cha\">\n                            <Ability info={5}/>\n                        </Route>\n                    </Switch>\n\n                </div>\n            </div>\n        );\n    }\n\n    abilityIcon(icon, tooltip, url) {\n        return (\n            <NavLink exact to={url} className={'ability-icon'}>\n                <span className=\"tooltip\">{tooltip}</span>\n                <img alt={\"\"} src={icon} />\n            </NavLink>\n        );\n    }\n\n}\n\n","import React, {Component, Fragment} from 'react';\nimport {diceRolls} from \"../../Parts\";\nimport {ArrowBtn} from \"../ArrowBtn\";\nimport {titleCase} from \"../../Utilities\";\nimport {terms} from \"../../Data/Terms\";\n\nexport class Intro extends Component {\n    render() {\n        return (\n            <Fragment>\n\n                {diceRolls(false)}\n\n\n\n                <ArrowBtn back={false} url={'/rolls/check'} text={titleCase(terms.rolls.ability.long.singular)} />\n                <ArrowBtn back={false} url={'/rolls/saving'} text={titleCase(terms.rolls.saving.singular)} />\n                <ArrowBtn back={false} url={'/rolls/attack'} text={titleCase(terms.rolls.attack.singular)} />\n\n                {this.advantage()}\n            </Fragment>\n        );\n    }\n\n    advantage() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.bonus.advantage.singular) + \" y \" +titleCase(terms.bonus.disadvantage.singular)}\n                </div>\n\n                <div className={'description'}>\n                    Al tener {terms.bonus.advantage.singular} o {terms.bonus.disadvantage.plural}, se lanza\n                    un segundo d20 al hacer el {terms.rolls.singular}.\n                    Para {terms.bonus.advantage.singular}, se usa el mayor de\n                    los dos {terms.rolls.plural}, y para {terms.bonus.disadvantage.plural} se usa\n                    el {terms.rolls.singular} más bajo.\n                    <br /><br />\n                    Si varias situaciones afectan un {terms.rolls.singular} y cada una le\n                    otorga {terms.bonus.advantage.singular} o le impone {terms.bonus.disadvantage.singular},\n                    no se tira más de un d20 adicional.\n                    <br /><br />\n                    Si las circunstancias hacen que\n                    un {terms.rolls.singular} tenga {terms.bonus.advantage.singular} y {terms.bonus.disadvantage.plural},\n                    se considera que no tiene ninguna de ellas.\n                    <br /><br />\n                    La {terms.bonus.advantage.singular} o {terms.bonus.disadvantage.plural} se obtiene\n                    con {terms.spell.plural} o {terms.traits.plural}. La {terms.inspiration.singular} también\n                    puede causar estos efectos.\n                    <br /><br />\n                    El {terms.gm} también puede decidir que las circunstancias influyen en\n                    un {terms.rolls.singular} en una dirección u otra y, como resultado,\n                    otorgan {terms.bonus.advantage.singular} o {terms.bonus.disadvantage.plural}.\n                </div>\n            </Fragment>\n        )\n    }\n}\n","import React, {Component, Fragment} from 'react';\nimport {abilityChecks, attackRolls, contests, groupChecks, passive, savingThrows} from \"../../Parts\";\nimport {titleCase} from \"../../Utilities\";\nimport {terms} from \"../../Data/Terms\";\nimport {ArrowBtn} from \"../ArrowBtn\";\n\nexport class Roll extends Component {\n\n    state = {\n        rollType : \"\"\n    };\n\n    componentDidUpdate() {\n        this.updateState();\n    }\n\n    componentDidMount() {\n        this.updateState();\n    }\n\n    updateState() {\n        if (this.props.info !== this.state.rollType){\n            this.setState({\n                rollType : this.props.info\n            })\n        }\n    }\n\n    render() {\n        let {rollType} = this.state;\n\n        return (\n            <Fragment>\n                {\n                    rollType === 'check'?\n                        this.checkRender() :\n                        rollType === 'saving'?\n                            this.savingRender() :\n                            this.attackRender()\n                }\n                <ArrowBtn url={'/rolls'} back={true} text={titleCase(terms.rolls.plural)}/>\n            </Fragment>\n        );\n    }\n\n    checkRender() {\n        return(\n            <Fragment>\n                {abilityChecks(false)}\n                <ArrowBtn url={'/abilities'} back={false} text={titleCase(terms.ability.plural)}/>\n                {contests()}\n                {groupChecks()}\n                {passive()}\n            </Fragment>\n        )\n    }\n\n    attackRender() {\n        return(\n            <Fragment>\n                {attackRolls(false)}\n                <ArrowBtn url={'/combat'} back={false} text={titleCase(terms.combat.name)}/>\n            </Fragment>\n        )\n    }\n\n    savingRender() {\n        return(\n            <Fragment>\n                {savingThrows(false)}\n            </Fragment>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport {Intro} from \"./Intro\";\nimport {Roll} from \"./Roll\";\n\nexport class RollComponent extends Component {\n    render() {\n        return (\n            <div className={'page'}>\n                <div className={'page-body'}>\n                    <Switch>\n                        <Route exact path=\"/rolls\">\n                            <Intro />\n                        </Route>\n                        <Route exact path=\"/rolls/saving\">\n                            <Roll info={'saving'} />\n                        </Route>\n                        <Route exact path=\"/rolls/check\">\n                            <Roll info={'check'} />\n                        </Route>\n                        <Route exact path=\"/rolls/attack\">\n                            <Roll info={'attack'} />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\n\nexport class GMComponent extends Component {\n    render() {\n        return (\n            <div className={'page'}>\n                <div style={{margin: 'auto',textAlign : 'center'}} className={'page-body serif header1'}>\n                    Thou shalt not doubt thy GM.\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {abilityIntro, hitDice, level} from \"../Parts\";\nimport {titleCase} from \"../Utilities\";\nimport {terms} from \"../Data/Terms\";\nimport {ArrowBtn} from \"./ArrowBtn\";\n\nexport class LevelComponent extends Component {\n\n    render() {\n        return (\n            <div className={'page'}>\n                <div className={'page-body'}>\n                    {level(false)}\n                    {abilityIntro()}\n                    <ArrowBtn url={'/abilities'} back={false} text={titleCase(terms.ability.plural)}/>\n                    {hitDice()}\n                    <ArrowBtn url={'/hitpoints'} back={false} text={titleCase(terms.hit.points.plural)}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {alignment} from \"../Parts\";\n\nexport class AlignmentComponent extends Component {\n\n    render() {\n        return (\n            <div className={'page'}>\n                <div className={'page-body'}>\n                    {alignment(false)}\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component, Fragment} from 'react';\nimport {terms} from \"../Data/Terms\";\nimport {ArrowBtn} from \"./ArrowBtn\";\nimport {titleCase} from \"../Utilities\";\n\nexport class InspirationComponent extends Component {\n\n    render() {\n        return (\n            <div className={'page'}>\n                <div className={'page-body'}>\n                    {this.inspirationIntro()}\n                    {this.inspirationGain()}\n                    {this.inspirationUse()}\n                    <ArrowBtn url={'/rolls'} back={false} text={titleCase(terms.rolls.plural)}/>\n                </div>\n            </div>\n        );\n    }\n\n    inspirationIntro() {\n        return(\n            <Fragment>\n                <div className={'header1 serif bold'}>\n                    {terms.inspiration}\n                </div>\n\n                <div className={'description'}>\n                    {terms.inspiration} es una regla que el {terms.gm} puede usar para recompensar\n                    a un jugador por interpretar a su personaje de una manera fiel a sus rasgos de\n                    personalidad, ideales, vínculos y fallas.\n                </div>\n            </Fragment>\n        )\n    }\n\n    inspirationGain() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    Ganar {terms.inspiration}\n                </div>\n\n                <div className={'description'}>\n                    El {terms.gm} puede elegir dar {terms.inspiration} por una variedad de razones.\n                    Por lo general, los {terms.gm} lo otorgan cuando juegan de acuerdo a su\n                    personalidad, cede ante los inconvenientes presentados por un defecto o\n                    vínculo y, por consiguiente, retrata a su personaje de una manera convincente.\n                    <br /><br />\n                    La {terms.inspiration} se tiene o no se tiene, no se puede acumular, ademas se vence.\n                </div>\n            </Fragment>\n        )\n    }\n\n    inspirationUse() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    Usar {terms.inspiration}\n                </div>\n\n                <div className={'description'}>\n                    Si tiene {terms.inspiration}, se puede gastar con cualquier {terms.rolls.singular}.\n                    Gastar {terms.inspiration} da {terms.bonus.advantage.singular}.\n                    <br /><br />\n                    Un jugador puede entregar su {terms.inspiration} a otro jugador por su\n                    buen juego de rol, por su inteligencia o por hacer algo emocionante en\n                    el juego, si el {terms.gm} lo permite.\n                </div>\n            </Fragment>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {death, healing, hitDice, hitPoints, knockedOut, maxHitPoints, noHitPoints, stableDeath} from \"../Parts\";\nimport {titleCase} from \"../Utilities\";\nimport {terms} from \"../Data/Terms\";\nimport {ArrowBtn} from \"./ArrowBtn\";\n\nexport class HitPointComponent extends Component {\n    render() {\n        return (\n            <div className={'page'}>\n                <div className={'page-body'}>\n                    {hitPoints(false)}\n                    {healing()}\n                    <ArrowBtn url={'/rest'} back={false} text={titleCase(terms.rest.inf)}/>\n                    <ArrowBtn url={'/hitpoints'} back={false} text={titleCase(terms.hit.points.plural)}/>\n                    {maxHitPoints()}\n                    <ArrowBtn url={'/level'} back={false} text={titleCase(terms.level.singular)}/>\n                    <ArrowBtn url={'/abilities'} back={false} text={titleCase(terms.ability.plural)}/>\n                    {hitDice()}\n                    {noHitPoints()}\n                    {death()}\n                    {knockedOut()}\n                    {stableDeath()}\n                    <ArrowBtn url={'/rolls/saving'} back={false} text={titleCase(terms.rolls.saving.plural)}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component, Fragment} from 'react';\nimport {terms} from \"../Data/Terms\";\nimport {titleCase} from \"../Utilities\";\nimport {hitDice} from \"../Parts\";\nimport {ArrowBtn} from \"./ArrowBtn\";\n\nexport class RestComponent extends Component {\n    render() {\n        return (\n            <div className={'page'}>\n                <div className={'page-body'}>\n                    {this.restIntro()}\n                    {this.short()}\n                    {this.long()}\n                    {hitDice()}\n                    <ArrowBtn url={'/hitpoints'} back={false} text={titleCase(terms.hit.points.plural)}/>\n                </div>\n            </div>\n        );\n    }\n\n    restIntro() {\n        return(\n            <Fragment>\n                <div className={'header1 serif bold'}>\n                    {titleCase(terms.rest.inf)}\n                </div>\n\n                <div className={'description'}>\n                    Por heroicos que puedan ser, los aventureros no pueden pasar cada\n                    hora del día en medio de la exploración, la interacción social y\n                    el combate. Necesitan descansar: tiempo para dormir y comer, atender\n                    sus heridas, refrescar sus mentes y espíritus para lanzar hechizos,\n                    y prepararse para una nueva aventura.\n\n                    Los aventureros pueden tomar descansos cortos en medio de un día de\n                    aventuras y un largo descanso para terminar el día.\n                </div>\n            </Fragment>\n        )\n    }\n\n    short() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.rest.short)}\n                </div>\n\n                <div className={'description'}>\n                    Un {terms.rest.short} es un período de inactividad, de al menos 1 hora de duración,\n                    durante el cual un personaje no hace nada más extenuante que comer, beber, leer\n                    o atender a heridas.\n                </div>\n            </Fragment>\n        )\n    }\n\n    long() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.rest.long)}\n                </div>\n\n                <div className={'description'}>\n                    Un {terms.rest.long} es un período de tiempo de inactividad prolongado, de al\n                    menos 8 horas, durante el cual un personaje duerme o realiza una actividad ligera:\n                    leer, hablar o comer.\n                    <br /><br />\n                    Si se ve\n                    interrumpido por un período de actividad extenuante (al menos 1 hora de caminar,\n                    pelear, lanzar hechizos o una actividad de aventura similar), los personajes deben\n                    comenzar el descanso nuevamente para obtener algún beneficio.\n                    <br /><br />\n                    Al final de un {terms.rest.long}, un personaje recupera todos los {terms.hit.points.plural} perdidos.\n                    El personaje también recupera todos los {terms.hit.die.plural} gastados, hasta la mitad del\n                    número maximo de ellos (mínimo de un dado).\n                    <br /><br />\n                    Un personaje no puede beneficiarse de más de un {terms.rest.long} en un período de\n                    24 horas, y un personaje debe tener al menos 1 {terms.hit.points.singular} al comienzo\n                    del {terms.rest.name} para obtener sus beneficios.\n                </div>\n            </Fragment>\n        )\n    }\n}\n","import React, {Component, Fragment} from 'react';\nimport {terms} from \"../Data/Terms\";\nimport {titleCase} from \"../Utilities\";\nimport {abilities} from \"../Data/Abilities\";\nimport {attackRolls, healing} from \"../Parts\";\nimport {ArrowBtn} from \"./ArrowBtn\";\n\n\nexport class CombatComponent extends Component {\n    render() {\n        return (\n            <div className={'page'}>\n                <div className={'page-body'}>\n\n                    {this.combatIntro()}\n                    {this.surprise()}\n                    {this.initiative()}\n                    <ArrowBtn back={false} url={'/rolls/check'} text={titleCase(terms.rolls.ability.long.singular)} />\n                    <ArrowBtn url={'/abilities'} back={false} text={titleCase(terms.ability.plural)}/>\n                    {this.actions()}\n                    {attackRolls()}\n                    <ArrowBtn url={'/rolls/attack'} back={false} text={titleCase(terms.rolls.attack.plural)}/>\n                    {this.damage()}\n                    <ArrowBtn url={'/abilities'} back={false} text={titleCase(terms.ability.plural)}/>\n                    {healing()}\n                    <ArrowBtn url={'/rest'} back={false} text={titleCase(terms.rest.inf)}/>\n                    <ArrowBtn url={'/hitpoints'} back={false} text={titleCase(terms.hit.points.plural)}/>\n                    {this.crit()}\n                    <ArrowBtn url={'/rolls/attack'} back={false} text={titleCase(terms.rolls.attack.plural)}/>\n                    {this.cover()}\n                    <ArrowBtn url={'/rolls/saving'} back={false} text={titleCase(terms.rolls.saving.plural)}/>\n                </div>\n            </div>\n        );\n    }\n\n    combatIntro() {\n        return(\n            <Fragment>\n                <div className={'header1 serif bold'}>\n                    {titleCase(terms.combat.name)}\n                </div>\n\n                <div className={'description'}>\n                    Un encuentro de combate típico es un choque entre dos bandos.\n                    El juego organiza el caos del combate en un ciclo de rondas y turnos.\n                    <br /><br />\n                    Durante una ronda, cada participante en una\n                    batalla toma un turno. El orden de los turnos se determina al comienzo\n                    de un encuentro de combate, cuando todos lanzan {terms.combat.init}. Una vez que\n                    todos han tomado su turno, la pelea continúa a la siguiente ronda si\n                    ninguna de las partes ha vencido a la otra.\n                </div>\n            </Fragment>\n        )\n    }\n\n    surprise() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.combat.surprise)}\n                </div>\n\n                <div className={'description'}>\n                    En ciertas situaciones, un lado de la batalla toma por sorpresa al otro.\n                    Si ninguna de las partes intenta ser sigilosa, usualmente se notan automáticamente.\n                    <br /><br />\n                    Una criatura sorprendida, no se puede mover ni realizar una acción en su primer turno del combate.\n                    Un miembro de un grupo puede sorprenderse incluso si los otros miembros no lo están.\n                </div>\n            </Fragment>\n        )\n    }\n\n    initiative() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.combat.init)}\n                </div>\n\n                <div className={'description'}>\n                    La {terms.combat.init} determina el orden de turnos durante el combate.\n                    Cuando comience el combate,\n                    cada participante realiza un {terms.rolls.ability.short.singular} de {abilities[1].name}.\n                    El {terms.GM} luego clasifica a los combatientes en orden de mayor a menor, y este\n                    es el orden de {terms.combat.init}. Ese es el orden\n                    en el que toman sus turnos. El orden no cambia durante el combate.\n\n                    <div className={'header3 serif bold'}>\n                        Resolviendo Empates\n                    </div>\n                    Si se produce un empate entre criaturas controladas por el {terms.gm},\n                    el {terms.gm} decide el orden.\n                    <br />\n                    Si se produce un empate entre jugadores, los jugadores deciden entre ellos.\n                    <br />\n                    El {terms.gm} puede decidir el orden si el empate es entre un monstruo y un jugador.\n                    Opcionalmente, el {terms.gm} puede resolver los empates con otro {terms.rolls.singular}.\n                </div>\n            </Fragment>\n        )\n    }\n\n    actions() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    Acciones en Combate\n                </div>\n\n                <div className={'description'}>\n                    Cuando realiza una acción en su turno, puede realizar una de las\n                    siguientes acciones, una acción que obtuvo de su clase\n                    o una característica especial, o una acción que improvisa.\n                    <br /><br />\n                    Cuando describe una acción improvisada,\n                    el {terms.gm} le dice si esa acción es posible y qué tipo de {terms.rolls.singular} debe hacer,\n                    si corresponde, para determinar el éxito o el fracaso.\n\n                    <div className={'header3 serif bold'}>\n                        Ataque\n                    </div>\n                    La acción más común para tomar en combate es atacar.\n\n\n                    <div className={'header3 serif bold'}>\n                        Usar un {terms.spell.singular}\n                    </div>\n                    Los lanzadores de {terms.spell.plural} tienen acceso a {terms.spell.plural} y pueden usarlos\n                    con gran efecto en combate.\n\n\n                    <div className={'header3 serif bold'}>\n                        Defender\n                    </div>\n                    Al defender, se enfoca completamente en evitar ataques.\n                    <br />\n                    Hasta el comienzo de su próximo turno, cualquier {terms.rolls.attack.singular} recibido\n                    tiene {terms.bonus.disadvantage.singular} si puedes ver al atacante, y\n                    hace un {terms.rolls.saving.singular} de {abilities[1].name} con {terms.bonus.advantage.singular}.\n\n\n                    <div className={'header3 serif bold'}>\n                        Ayudar\n                    </div>\n                    Puede prestar su ayuda a otra criatura a completar una tarea.\n                    <br />\n                    Cuando realiza\n                    la acción de ayuda, la criatura que recibe la ayuda gana {terms.bonus.advantage.singular} en\n                    el próximo {terms.rolls.ability.long.singular} que\n                    realice para realizar esa tarea, siempre\n                    que haga el {terms.rolls.ability.short.singular} antes del comienzo de su próximo turno.\n\n\n                    <div className={'header3 serif bold'}>\n                        Preparar\n                    </div>\n                    A veces quiere esperar una circunstancia particular\n                    antes de actuar.\n                    <br />\n                    Para hacerlo, puede prepararse en tu turno.\n                    Primero, se decide la circunstancia perceptible que desencadenará su acción.\n                    Luego, se elige la acción a tomar en respuesta.\n                    <br /><br />\n                    Cuando se produce la circunstancia, puede realizar su acción justo después de que\n                    suceda o ignorarlo.\n                    <br /><br />\n                    Si prepara un hechizo, debe mantener la\n                    magia del hechizo. Si su concentración se rompe, el\n                    hechizo se disipa sin tener efecto.\n\n\n                    <div className={'header3 serif bold'}>\n                        Buscar\n                    </div>\n                    Cuando realiza la acción de búsqueda, dedica su atención a encontrar algo.\n                    <br/>\n                    Dependiendo de la naturaleza de su búsqueda, el {terms.gm} podría requerir\n                    un {terms.rolls.ability.long.singular}. Al hacer esto,\n                    está en {terms.bonus.disadvantage.singular} a cualquier ataque.\n\n\n                    <div className={'header3 serif bold'}>\n                        Usar un objeto\n                    </div>\n                    Cuando un objeto requiere su acción\n                    para su uso, realiza la acción usar un objeto.\n                    <br/>\n                    Esta acción también es útil cuando\n                    quiera interactuar con más de un objeto en su turno.\n                </div>\n            </Fragment>\n        )\n    }\n\n    crit() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.crit.singular)}\n                </div>\n\n                <div className={'description'}>\n                    Si el {terms.rolls.attack.singular} fue un 20, el ataque es un {terms.crit.singular}.\n\n                    Cuando obtiene un {terms.rolls.attack.singular}, tire todos los dados de daño dos veces y súmalos.\n                    Luego agregue los {terms.ability.modifier.short.plural} relevantes de la forma habitual.\n\n                </div>\n            </Fragment>\n        )\n    }\n\n    damage() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    {titleCase(terms.rolls.damage.plural)}\n                </div>\n\n                <div className={'description'}>\n                    Cada arma, hechizo y habilidad de monstruo dañino especifica el daño que causa.\n                    Tire los dados involucrados con el ataque, agregue {terms.ability.modifier.short.plural} y\n                    aplica el daño a su objetivo.\n                    <br/><br/>\n                    Muchos factores pueden otorgar una\n                    bonificación o penalización al daño, es posible inflingir 0 daño, pero nunca\n                    daño negativo.\n                    <br/><br/>\n                    Cuando ataca con un arma, agrega su {terms.ability.modifier.long.singular},\n                    el mismo {terms.ability.modifier.short.singular} utilizado\n                    para el {terms.rolls.attack.singular}, al daño.\n                    Un {terms.spell.singular}  dice qué dados tirar para\n                    el daño y si agregar algún {terms.ability.modifier.short.singular}.\n                    <br/><br/>\n                    Si un {terms.spell.singular} u otro efecto hace daño a más de un objetivo al mismo tiempo,\n                    se realiza un solo {terms.rolls.damage.plural} para todos ellos.\n                </div>\n            </Fragment>\n        )\n    }\n\n    cover() {\n        return(\n            <Fragment>\n                <div className={'header2 serif bold'}>\n                    Cubrirse\n                </div>\n\n                <div className={'description'}>\n                    Las paredes, los árboles, las criaturas y otros obstáculos\n                    pueden proporcionar cobertura durante el combate, haciendo\n                    que un objetivo sea más difícil de dañar. Un objetivo puede\n                    beneficiarse de la cobertura solo cuando un ataque u otro efecto\n                    se origina en el lado opuesto de la cobertura.\n                    <br/><br/>\n                    Hay tres grados de cobertura. Si un objetivo está detrás de\n                    múltiples fuentes de cobertura, solo se aplica el grado de\n                    cobertura más protector; los grados no se suman.\n                    <br/><br/>\n                    Un objetivo con media cobertura tiene una bonificación de +2\n                    a {terms.ac.short.singular} y {terms.rolls.saving.singular} de {abilities[1].name}.\n                    <br/>\n                    Un objetivo tiene media cobertura si un obstáculo bloquea\n                    al menos la mitad de su cuerpo.\n                    <br/><br/>\n                    Un objetivo con media cobertura tiene una bonificación de +5\n                    a {terms.ac.short.singular} y {terms.rolls.saving.singular} de {abilities[1].name}.\n                    <br/>\n                    Un objetivo tiene una cobertura de tres cuartos si alrededor de\n                    tres cuartos está cubierto por un obstáculo.\n                    <br/><br/>\n                    Un objetivo con cobertura total no puede ser objetivo directo de un ataque o {terms.spell.singular},\n                    los {terms.spell.singular} con área de efecto si pueden dañar al objetivo.\n                    <br/>\n                    Un objetivo tiene cobertura total si está completamente oculto por un obstáculo.\n                </div>\n            </Fragment>\n        )\n    }\n}\n","import {AbilityComponent} from \"./Components/Abilities/AbilityComponent\";\nimport {RollComponent} from \"./Components/Rolls/RollComponent\";\nimport {GMComponent} from \"./Components/GMComponent\";\nimport {LevelComponent} from \"./Components/LevelComponent\";\nimport {AlignmentComponent} from \"./Components/AlignmentComponent\";\nimport {InspirationComponent} from \"./Components/InspirationComponent\";\nimport React from \"react\";\nimport {terms} from \"./Data/Terms\";\nimport {titleCase} from \"./Utilities\";\nimport {HitPointComponent} from \"./Components/HitPointComponent\";\nimport {RestComponent} from \"./Components/RestComponent\";\nimport {CombatComponent} from \"./Components/CombatComponent\";\n\nexport var tree = [\n    {\n        path: \"/gm\",\n        comp : <GMComponent />,\n        title : terms.gm,\n        hidden : true\n    },\n    {\n        path: \"/level\",\n        comp : <LevelComponent />,\n        title : titleCase(terms.level.plural),\n        hidden : false\n    },\n    {\n        path : \"/abilities\",\n        comp : <AbilityComponent />,\n        title : titleCase(terms.ability.plural),\n        hidden : false\n    },\n    {\n        path: \"/rolls\",\n        comp : <RollComponent />,\n        title : titleCase(terms.rolls.plural),\n        hidden : false\n    },\n    {\n        path: \"/combat\",\n        comp : <CombatComponent />,\n        title : titleCase(terms.combat.name),\n        hidden : false\n    },\n    {\n        path: \"/hitpoints\",\n        comp : <HitPointComponent />,\n        title : terms.hit.points.plural,\n        hidden : false\n    },\n    {\n        path: \"/rest\",\n        comp : <RestComponent />,\n        title : titleCase(terms.rest.inf),\n        hidden : false\n    },\n    {\n        path: \"/alignment\",\n        comp : <AlignmentComponent />,\n        title : titleCase(terms.alignment.plural),\n        hidden : false\n    },\n    {\n        path: \"/inspiration\",\n        comp : <InspirationComponent />,\n        title : titleCase(terms.inspiration),\n        hidden : false\n    },\n\n];","import React, {Component, Fragment} from 'react';\nimport '../Style/navmenu.scss';\nimport {NavLink} from \"react-router-dom\";\nimport {tree} from \"../Tree\";\nimport d20 from '../Assets/d20.svg';\n\nexport class MainMenu extends Component {\n\n    render() {\n        return (\n            <div className={'nav-menu'}>\n                {tree.map(item =>\n                    item.hidden? <Fragment key={'Menu-'+tree.indexOf(item)}> </Fragment> :\n                    <NavLink key={'Menu-'+tree.indexOf(item)} className={'nav-btn serif'} to={item.path}>\n                        <span className={'text'}>{item.title}</span>\n                        <img className={'dragon'} alt={\"\"} src={d20}/>\n                    </NavLink>\n                )}\n            </div>\n        );\n    }\n}\n","import React, {Component, Fragment} from 'react';\nimport {Route, BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport '../Style/trinkets.scss';\nimport {terms} from \"../Data/Terms\";\nimport {titleCase} from \"../Utilities\";\nimport {MainMenu} from \"./MainMenu\";\nimport {tree} from \"../Tree\";\n\n\nclass MainComponent extends Component {\n    render() {\n        return (\n            <Fragment>\n                <div className={'main-title serif bold'}>\n                    {titleCase(terms.game)}\n                </div>\n\n                <MainMenu />\n\n                <Router>\n                    <Switch>\n                        {\n                            tree.map(item =>\n\n                                <Route key={'Main-'+tree.indexOf(item)} path={item.path}>\n                                    {item.comp}\n                                </Route>\n                            )\n                        }\n                    </Switch>\n                </Router>\n\n            </Fragment>\n        );\n    }\n}\n\nexport default (MainComponent);","import React from 'react';\nimport './Style/app.scss';\nimport MainComponent from \"./Components/MainComponent\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <Router\n          forceRefresh={true}>\n        <MainComponent />\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve Assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}